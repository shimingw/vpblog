(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{308:function(t,e,v){"use strict";v.r(e);var _=v(10),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"node"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#node"}},[t._v("#")]),t._v(" Node")]),t._v(" "),v("h3",{attrs:{id:"第二课"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第二课"}},[t._v("#")]),t._v(" 第二课")]),t._v(" "),v("ul",[v("li",[t._v("跨域（同源策略）\n"),v("ul",[v("li",[v("strong",[t._v("非简单请求")]),t._v("前会触发"),v("strong",[t._v("预检")]),t._v("（INPUT请求）")]),t._v(" "),v("li",[t._v("后端在请求头中，设置允许请求的源")]),t._v(" "),v("li",[t._v("反向代理可以解决跨域请求\n"),v("ul",[v("li",[t._v("反向代理是服务器端")]),t._v(" "),v("li",[t._v("正向代理是在客户端")])])])])])]),t._v(" "),v("h3",{attrs:{id:"第四课"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第四课"}},[t._v("#")]),t._v(" 第四课")]),t._v(" "),v("ul",[v("li",[t._v("mysql\n"),v("ul",[v("li",[t._v("关系型数据库")]),t._v(" "),v("li",[t._v("通常使用"),v("code",[t._v("ORM")]),t._v("去操作数据库")]),t._v(" "),v("li",[t._v("主键推荐使用"),v("code",[t._v("UUID")]),t._v("（不使用自增"),v("code",[t._v("id")]),t._v("），这样在以后分库分表的时候不会产生冲突")]),t._v(" "),v("li",[t._v("利用"),v("code",[t._v("ORM")]),t._v("可以建立数据库表中的对应关系。一对一，一对多，多对多")])])])]),t._v(" "),v("h3",{attrs:{id:"第五课"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第五课"}},[t._v("#")]),t._v(" 第五课")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("MongoDB")]),t._v(" "),v("ul",[v("li",[t._v("非关系型数据库")]),t._v(" "),v("li",[t._v("适合便捷开发")])])]),t._v(" "),v("li",[v("p",[t._v("Mongoose")]),t._v(" "),v("ul",[v("li",[t._v("mgdb的中间件")]),t._v(" "),v("li",[t._v("ODM")]),t._v(" "),v("li",[t._v("存在的价值：实体驱动设计\n"),v("ul",[v("li",[t._v("代码中定义实体字段")]),t._v(" "),v("li",[t._v("向下自动生成表")]),t._v(" "),v("li",[t._v("向上提供ORM操作")])])])])])]),t._v(" "),v("h3",{attrs:{id:"第六课"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第六课"}},[t._v("#")]),t._v(" 第六课")]),t._v(" "),v("p",[t._v("鉴权")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("session")]),t._v("/"),v("code",[t._v("cookie")]),t._v(" "),v("ul",[v("li",[t._v("用户数据存在后端")])])]),t._v(" "),v("li",[t._v("JWT\n"),v("ul",[v("li",[t._v("JSON WEB TOKEN")]),t._v(" "),v("li",[t._v("包含三部分：令牌头、payload、哈希")])])]),t._v(" "),v("li",[t._v("OAuth（以"),v("code",[t._v("github")]),t._v("为例）\n"),v("ul",[v("li",[t._v("带上"),v("code",[t._v("client_id")]),t._v("重定向到"),v("code",[t._v("github")]),t._v("登录页")]),t._v(" "),v("li",[t._v("用户输入账号密码登录")]),t._v(" "),v("li",[t._v("登录后"),v("code",[t._v("github")]),t._v("回带着"),v("code",[t._v("code")]),t._v("，重定向到服务器的页面")]),t._v(" "),v("li",[t._v("服务器用"),v("code",[t._v("code")]),t._v("再向"),v("code",[t._v("github")]),t._v("发起请求，获取用户的"),v("code",[t._v("access_token")])]),t._v(" "),v("li",[t._v("获取到"),v("code",[t._v("access_token")]),t._v("后，服务器拿着"),v("code",[t._v("access_token")]),t._v("，就可以获取到用户的信息")]),t._v(" "),v("li",[t._v("后面服务器可以将"),v("code",[t._v("access_token")]),t._v("，数据持久化，下次登录，直接向"),v("code",[t._v("github")]),t._v("请求获取用户信息")])])]),t._v(" "),v("li",[t._v("SSO（单点登录）\n"),v("ul",[v("li",[t._v("同域下的单点登录\n"),v("ul",[v("li",[t._v("通过共享"),v("code",[t._v("cookie")]),t._v("来实现单点登录")]),t._v(" "),v("li",[t._v("需要将多个应用登录信息保存在一个"),v("code",[t._v("session")]),t._v("中")])])]),t._v(" "),v("li",[t._v("不同域下的单点登录\n"),v("ul",[v("li",[t._v("通过一个SSO中间平台")]),t._v(" "),v("li",[t._v("每个服务，登录时，都会重定向到SSO平台")]),t._v(" "),v("li",[t._v("SSO验证自己是否已经登陆过")]),t._v(" "),v("li",[t._v("如果登录过，则带着"),v("code",[t._v("ticket")]),t._v("，重定向到改服务")]),t._v(" "),v("li",[t._v("服务器拿着"),v("code",[t._v("ticket")]),t._v("去验证是否有效，")]),t._v(" "),v("li",[t._v("如果有效，则返回用户信息。并将用户信息保存在"),v("code",[t._v("session")]),t._v("中")]),t._v(" "),v("li",[t._v("如果无效则重新登录，获取新的"),v("code",[t._v("ticket")])]),t._v(" "),v("li",[t._v("当然也可以将"),v("code",[t._v("session")]),t._v("通过"),v("code",[t._v("redis")]),t._v("等服务器实现共享")])])])])])]),t._v(" "),v("h3",{attrs:{id:"第七课"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第七课"}},[t._v("#")]),t._v(" 第七课")]),t._v(" "),v("p",[t._v("egg")]),t._v(" "),v("ul",[v("li",[t._v("egg分为三层\n"),v("ul",[v("li",[t._v("control：控制器（信息资源层），去调用serivce层")]),t._v(" "),v("li",[t._v("model：数据绑定层，提供查询数据的api")]),t._v(" "),v("li",[t._v("service：业务逻辑处理层")])])]),t._v(" "),v("li",[t._v("egg实现原理\n"),v("ul",[v("li",[t._v("egg是基于koa实现的一套企业级框架")]),t._v(" "),v("li",[t._v("通过初始化egg时")]),t._v(" "),v("li",[t._v("导入路由模块文件")]),t._v(" "),v("li",[t._v("导入控制器模块文件")]),t._v(" "),v("li",[t._v("导入service层模块文件")]),t._v(" "),v("li",[t._v("导入model层模块文件")]),t._v(" "),v("li",[t._v("约定文件所属目录，文件名称等一系列的方式来约定")])])]),t._v(" "),v("li",[t._v("定时任务\n"),v("ul",[v("li",[t._v("使用node-schedule来管理定时任务")])])])]),t._v(" "),v("h3",{attrs:{id:"第八课"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第八课"}},[t._v("#")]),t._v(" 第八课")]),t._v(" "),v("p",[t._v("egg最佳实践")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("基于插件的swagger-doc接口定义")])]),t._v(" "),v("li",[v("p",[t._v("统一异常处理")])]),t._v(" "),v("li",[v("p",[t._v("基于拓展的hepler响应统一处理")])]),t._v(" "),v("li",[v("p",[t._v("validate接口格式检查")])]),t._v(" "),v("li",[v("p",[t._v("三层结构")]),t._v(" "),v("ul",[v("li",[t._v("control层")]),t._v(" "),v("li",[t._v("service层")]),t._v(" "),v("li",[t._v("model层")])])]),t._v(" "),v("li",[v("p",[t._v("jwt统一鉴权")]),t._v(" "),v("ul",[v("li",[t._v("根据接口前缀进行鉴权")])])]),t._v(" "),v("li",[v("p",[t._v("文件上传")])])]),t._v(" "),v("h3",{attrs:{id:"第九课"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第九课"}},[t._v("#")]),t._v(" 第九课")]),t._v(" "),v("p",[t._v("ts与装饰器")]),t._v(" "),v("ul",[v("li",[t._v("类Class")]),t._v(" "),v("li",[t._v("接口Interface")]),t._v(" "),v("li",[t._v("模块Module")]),t._v(" "),v("li",[t._v("类型注解")]),t._v(" "),v("li",[t._v("装饰器\n"),v("ul",[v("li",[t._v("类装饰")]),t._v(" "),v("li",[t._v("方法装饰")]),t._v(" "),v("li",[t._v("AOP功能")])])]),t._v(" "),v("li",[t._v("编译时的类型检查")]),t._v(" "),v("li",[t._v("箭头函数")])]),t._v(" "),v("h3",{attrs:{id:"第十课"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第十课"}},[t._v("#")]),t._v(" 第十课")]),t._v(" "),v("p",[t._v("费曼学习法")]),t._v(" "),v("h4",{attrs:{id:"node部署"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#node部署"}},[t._v("#")]),t._v(" node部署")]),t._v(" "),v("p",[t._v("主要解决问题")]),t._v(" "),v("ul",[v("li",[t._v("故障恢复、多核利用")])]),t._v(" "),v("p",[t._v("使用"),v("code",[t._v("cluster")]),t._v("这个"),v("code",[t._v("node")]),t._v("自带的库可以解决故障恢复和多核利用")]),t._v(" "),v("p",[v("strong",[t._v("实现思路")])]),t._v(" "),v("p",[t._v("多核利用：将主进程"),v("code",[t._v("fork")]),t._v("多份，主进程启动服务后，"),v("code",[t._v("fork")]),t._v("的进程也会启动一样的服务")]),t._v(" "),v("p",[t._v("故障恢复："),v("code",[t._v("cluster")]),t._v("可以监听，子进程的状态，如果发现子进程挂了，就重启该子进车")]),t._v(" "),v("p",[t._v("ps：也可以使用pm2去实现上述功能")]),t._v(" "),v("ul",[v("li",[t._v("多进程共享端口")])]),t._v(" "),v("h4",{attrs:{id:"docker"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[t._v("#")]),t._v(" docker")]),t._v(" "),v("ul",[v("li",[t._v("操作系统层面的虚拟化技术")]),t._v(" "),v("li",[t._v("隔离的进程独立于宿主和其他的隔离的进程-容器")]),t._v(" "),v("li",[t._v("go语言发")])]),t._v(" "),v("p",[t._v("特点")]),t._v(" "),v("ul",[v("li",[t._v("高效利用系统资源")]),t._v(" "),v("li",[t._v("快速启动")]),t._v(" "),v("li",[t._v("更轻松的迁移")])]),t._v(" "),v("p",[v("strong",[t._v("定制镜像")])]),t._v(" "),v("ol",[v("li",[t._v("定制一个nginx镜像")])]),t._v(" "),v("p",[t._v("编写配置文件（Dockerfile）")]),t._v(" "),v("p",[t._v("docker build -t <镜像名称>  Dockerfile")]),t._v(" "),v("div",{staticClass:"language-dockerfile extra-class"},[v("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Dockerfile")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" nginx"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("latest\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" echo ‘hello docker’ "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" /usr/share/nginx/html/index.html\n")])])]),v("ol",{attrs:{start:"2"}},[v("li",[t._v("定制一个node镜像")])]),t._v(" "),v("div",{staticClass:"language-dockerfile extra-class"},[v("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#定制node镜像版本")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" node"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("10"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("alpine\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#移动当前目录下的文件到app目录下，即将node项目拷贝到app目录")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ADD")]),t._v(" . /app/\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进入到app目录下面，类似cd")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WORKDIR")]),t._v(" /app\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#安装依赖")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("RUN")]),t._v(" npm install\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对外暴露的端口")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("EXPOSE")]),t._v(" 3000\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#程序启动脚本")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("CMD")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"app.js"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),v("p",[v("strong",[t._v("一次性操作多个"),v("code",[t._v("docker")])])]),t._v(" "),v("blockquote",[v("p",[t._v("使用Docker-Compose命令")])]),t._v(" "),v("ol",[v("li",[t._v("配置docker-compose.yml文件，在文件中写入多个docker的配置")]),t._v(" "),v("li",[t._v("使用 "),v("code",[t._v("docker-compose up")]),t._v(" 命令。启动多个docker服务")])]),t._v(" "),v("p",[t._v("https://github.com/su37josephxia/docker_ci")]),t._v(" "),v("h2",{attrs:{id:"项目实战"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#项目实战"}},[t._v("#")]),t._v(" 项目实战")]),t._v(" "),v("p",[t._v("错误收集方案")]),t._v(" "),v("ol",[v("li",[t._v("全局捕获，使用"),v("code",[t._v("window.onerror")]),t._v("（通过img标签来发请求）")]),t._v(" "),v("li",[t._v("主动上报。try/catch")]),t._v(" "),v("li",[t._v("sentry（免费够用）")]),t._v(" "),v("li",[t._v("fundebug（收费、国内做的比较好的）")]),t._v(" "),v("li",[t._v("自己手写报错平台")]),t._v(" "),v("li",[t._v("错误通知机制")])]),t._v(" "),v("p",[t._v("数据库设计")]),t._v(" "),v("ul",[v("li",[t._v("一对多")]),t._v(" "),v("li",[t._v("多对多")])]),t._v(" "),v("h2",{attrs:{id:"react"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#react"}},[t._v("#")]),t._v(" React")]),t._v(" "),v("h3",{attrs:{id:"简要介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#简要介绍"}},[t._v("#")]),t._v(" 简要介绍")]),t._v(" "),v("ol",[v("li",[v("p",[v("code",[t._v("React")]),t._v("负责逻辑控制，将数据转化成"),v("code",[t._v("VNode")]),t._v("（主要功能"),v("code",[t._v("React.createElement")]),t._v("）")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("ReactDom")]),t._v("渲染实际"),v("code",[t._v("DOM")]),t._v("，将"),v("code",[t._v("VNode")]),t._v("转化成真实"),v("code",[t._v("DOM")])])]),t._v(" "),v("li",[v("p",[t._v("组件形式有两种")])])]),t._v(" "),v("ul",[v("li",[v("code",[t._v("function")]),t._v("组件")]),t._v(" "),v("li",[v("code",[t._v("class")]),t._v("组件")])]),t._v(" "),v("ol",{attrs:{start:"4"}},[v("li",[v("p",[t._v("vscode中react插件auto-import")])]),t._v(" "),v("li",[v("p",[t._v("this.state 的执行时异步，如果要实现同步可以")])])]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一种")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nextState")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    retrun "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        count"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("nextState"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二种")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        count"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("nextState"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//第三种")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//使用原生事件绑定的方式")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventLister")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v("'click'")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("setState")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        count"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("nextState"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count\n    "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),v("h3",{attrs:{id:"组件通信"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组件通信"}},[t._v("#")]),t._v(" 组件通信")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("props")]),t._v("父子组件之间传值")]),t._v(" "),v("li",[v("code",[t._v("context")]),t._v("跨层级组件组件通信")]),t._v(" "),v("li",[v("code",[t._v("redux")]),t._v("类似"),v("code",[t._v("vuex")]),t._v("，无明显关系的组件通信")])]),t._v(" "),v("h3",{attrs:{id:"生命周期"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#生命周期"}},[t._v("#")]),t._v(" 生命周期")]),t._v(" "),v("ul",[v("li",[v("p",[v("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/10306662-b1113e690ef13a8d.png",alt:""}})])]),t._v(" "),v("li",[v("p",[v("code",[t._v("componentWillMount")]),t._v("组件挂载之前")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("render")]),t._v("组件挂载方法")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("componentDidMount")]),t._v("组件挂载之后")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("componentWillReceiveProps 已挂载的组件的")]),t._v("props传值发生变化时触发")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("shouldComponentUpdate")]),t._v("组件更新之前，在"),v("code",[t._v("componentWillUpdate")]),t._v("之前，决定组件是否更新")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("componentWillUpdate")]),t._v("组件更新之前")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("componentDidUpdate")]),t._v("组件更新之后")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("componentWillUnmount")]),t._v("组件卸载之前")])])]),t._v(" "),v("h3",{attrs:{id:"_16-4版本之后废弃的生命周期函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_16-4版本之后废弃的生命周期函数"}},[t._v("#")]),t._v(" "),v("strong",[t._v("16.4")]),t._v("版本之后废弃的生命周期函数")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://upload-images.jianshu.io/upload_images/12185313-85b3010f0b8b7d16.png",alt:""}})]),t._v(" "),v("ul",[v("li",[v("p",[t._v("如果一定要使用需要加UNSAFE")])]),t._v(" "),v("li",[v("p",[v("code",[t._v("componentWillMount")])])]),t._v(" "),v("li",[v("p",[v("code",[t._v("componentWillReceiveProps")])])]),t._v(" "),v("li",[v("p",[v("code",[t._v("componentWillUpdate")])])])]),t._v(" "),v("h3",{attrs:{id:"引入了两个新的生命周期函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#引入了两个新的生命周期函数"}},[t._v("#")]),t._v(" 引入了两个新的生命周期函数")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("Static getDerivedStateFromProps")]),t._v("当props传值发生变化时触发\n"),v("ul",[v("li",[t._v("在初始挂载及后续更新时都会被调用")]),t._v(" "),v("li",[t._v("返回的对象会被当做"),v("code",[t._v("this.setState")]),t._v("的参数进行设置")]),t._v(" "),v("li",[t._v("返回"),v("code",[t._v("null")]),t._v("则，不触发")])])]),t._v(" "),v("li",[v("code",[t._v("getSanapshotBeforeUpdate")]),t._v("组件update时获取上一次的"),v("code",[t._v("props")]),t._v("和"),v("code",[t._v("state")])])]),t._v(" "),v("h3",{attrs:{id:"组件跨层级通信context"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组件跨层级通信context"}},[t._v("#")]),t._v(" 组件跨层级通信context")]),t._v(" "),v("p",[t._v("版本>=16.3")]),t._v(" "),v("p",[t._v("类似"),v("code",[t._v("vue")]),t._v("的"),v("code",[t._v("provide")]),t._v("和"),v("code",[t._v("inject")])]),t._v(" "),v("p",[t._v("写组件库的时候经常会用到")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("Provider")]),t._v(":提供者")]),t._v(" "),v("li",[v("code",[t._v("Consumer")]),t._v("：消费者")])]),t._v(" "),v("div",{staticClass:"language-react extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("import React from 'react'\n// 在这里创建提供者，可以使用别名去区分\nconst Context = React.createContext('text')\nconst Provider = Context.Provider\nconst Consumer = Context.Consumer\nconst store = {\n  user: {\n    name: 'shimingw'\n  }\n}\nfunction App() {\n  retrun(\n    <div>\n      <Provider value={store}>\n        {/* 在哪里需要使用的时候再把 Consumer 引进来*/}\n        <Consumer>{ctx => <Home {...ctx} />}</Consumer>\n      </Provider>\n    </div>\n  )\n}\n\nfunction Home(props) {\n  // 这里通过props就可以父组件传递的值\n  // 或者也可以直接使用this.context\n  return <div>home</div>\n}\n")])])]),v("h3",{attrs:{id:"组件复合-composition"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组件复合-composition"}},[t._v("#")]),t._v(" 组件复合-Composition")]),t._v(" "),v("p",[t._v("类似"),v("code",[t._v("vue")]),t._v("的"),v("code",[t._v("slot")]),t._v("功能，也有"),v("strong",[t._v("具名插槽")]),t._v("和"),v("strong",[t._v("默认插槽")]),t._v("两种")]),t._v(" "),v("p",[t._v("通过"),v("code",[t._v("this.props.children")]),t._v("来获取嵌套子组件")]),t._v(" "),v("h3",{attrs:{id:"高阶组件hoc"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#高阶组件hoc"}},[t._v("#")]),t._v(" 高阶组件HOC")]),t._v(" "),v("p",[t._v("他是一个工厂函数")]),t._v(" "),v("p",[t._v("将组件以传值的方式传进来，他接收一个组件并返回另一个组件")]),t._v(" "),v("p",[t._v("也可以使用装饰器写法，更优雅")]),t._v(" "),v("div",{staticClass:"language-react extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("const consumerHandle = Cmp => props => {\n  return <Consumer>{ctx => <Cmp {...props} {...ctx} />}</Consumer>\n}\n")])])]),v("h3",{attrs:{id:"hooks"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hooks"}},[t._v("#")]),t._v(" Hooks")]),t._v(" "),v("p",[t._v("版本>=16.8")]),t._v(" "),v("p",[t._v("可以时函数时组件，具备状态")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("useState")]),t._v("管理组件状态")]),t._v(" "),v("li",[v("code",[t._v("useEffect")]),t._v("副作用，可作为声明周期使用")]),t._v(" "),v("li",[v("code",[t._v("useReducer")]),t._v("一个进阶版的"),v("code",[t._v("useState")]),t._v("，可执行多重状态更新的动作")]),t._v(" "),v("li",[v("code",[t._v("useContext")]),t._v("快速在函数组件中导入上下文")])]),t._v(" "),v("div",{staticClass:"language-react extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("import React, { useState, useEffect, useReducer } from 'react'\n\nfunction fruitsReducer(state, action) {\n  // state初始化时传入的值\n  // action更新动作\n  switch (action.type) {\n    case 'init':\n      return action.payload\n    default:\n      return state\n  }\n}\n\nfunction Hooks() {\n  const [count, setCount] = useState(0)\n  const [fruites, dispatch] = useState(fruitsReducer, [])\n  useEffect(() => {\n    // 第二参数为数据，可以监听组件state中的值\n    // 如果不传值。则未作函数挂在前执行的方法\n\n    // setCount后会更新count的值\n    setCount(1)\n    // dispatch后会更新fruites\n    dispatch({ type: 'init', payload: ['apple'] })\n    // return的函数在组件卸载前会执行\n    return () => {}\n  })\n  return (\n    <div>\n      {count}\n      {fruites}\n    </div>\n  )\n}\n")])])]),v("h3",{attrs:{id:"antd-form"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#antd-form"}},[t._v("#")]),t._v(" antd-form")]),t._v(" "),v("p",[v("code",[t._v("React.cloneElement(<ReactCmp>,options)")])]),t._v(" "),v("p",[t._v("手写"),v("code",[t._v("antd")]),t._v("的"),v("code",[t._v("form")]),t._v("表单")]),t._v(" "),v("h3",{attrs:{id:"createportal"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#createportal"}},[t._v("#")]),t._v(" createPortal")]),t._v(" "),v("p",[t._v("可将组件渲染至任意节点（传送门）")]),t._v(" "),v("p",[t._v("接受两个参数，一个数组件，第二是需要渲染到的父节点")]),t._v(" "),v("h3",{attrs:{id:"purecomponent"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#purecomponent"}},[t._v("#")]),t._v(" pureComponent")]),t._v(" "),v("p",[t._v("会比较组件数据更新前后的数据，如果没有变化则不重新"),v("code",[t._v("render")]),t._v("组件")]),t._v(" "),v("p",[t._v("但是仅支持浅比较。如果是嵌套对象，则需要使用"),v("code",[t._v("shouldUpdate")])]),t._v(" "),v("h3",{attrs:{id:"redux"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#redux"}},[t._v("#")]),t._v(" redux")]),t._v(" "),v("p",[t._v("实现原理是基于发布订阅")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("createStore")]),t._v(" 创建"),v("code",[t._v("store")])]),t._v(" "),v("li",[v("code",[t._v("reducer")]),t._v(" 接受一个旧的"),v("code",[t._v("state")]),t._v("和"),v("code",[t._v("action")]),t._v("返回一个新的"),v("code",[t._v("state")]),t._v("来更新组件")]),t._v(" "),v("li",[v("code",[t._v("getState")]),t._v(" 获取状态值")]),t._v(" "),v("li",[v("code",[t._v("dispatch")]),t._v(" 提交更新，触发某个"),v("code",[t._v("reducer")])]),t._v(" "),v("li",[v("code",[t._v("subscribe")]),t._v(" 订阅某个"),v("code",[t._v("reducer")])])]),t._v(" "),v("h3",{attrs:{id:"react-redux"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#react-redux"}},[t._v("#")]),t._v(" react-redux")]),t._v(" "),v("p",[t._v("实现原理是"),v("code",[t._v("redux")]),t._v("+"),v("code",[t._v("context")]),t._v("来实现"),v("code",[t._v("react")]),t._v("专用的"),v("code",[t._v("redux")])]),t._v(" "),v("ul",[v("li",[v("code",[t._v("provider")]),t._v(" 为后代组件提供"),v("code",[t._v("store")])]),t._v(" "),v("li",[v("code",[t._v("connect")]),t._v(" 为组件提供数据和变更方法")])]),t._v(" "),v("div",{staticClass:"language-react extra-class"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("connect(state=>{\n\treturn {value:state}\n},{\n\tadd:()=>{\n\t\treturn{\n\t\t\ttype:'add'\n\t\t}\n\t}\n}\n)(<Cmp />)\n")])])]),v("h3",{attrs:{id:"react-route"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#react-route"}},[t._v("#")]),t._v(" react-route")]),t._v(" "),v("p",[t._v("奉行一切皆组件的思想")]),t._v(" "),v("p",[t._v("实现原理：借助"),v("code",[t._v("history")]),t._v("这个库来实现路由跳转，"),v("code",[t._v("context")]),t._v("来跨组件传值，在"),v("code",[t._v("Route")]),t._v("组件中，使用"),v("code",[t._v("React.createElement")]),t._v("来渲染对应的组件")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("BrowserRouter")]),t._v("最外层组件")]),t._v(" "),v("li",[v("code",[t._v("Link")]),t._v("路由跳转链接")]),t._v(" "),v("li",[v("code",[t._v("Route")]),t._v("路由匹配组件")]),t._v(" "),v("li",[v("code",[t._v("Switch")]),t._v("独占路由")])]),t._v(" "),v("h4",{attrs:{id:"路由守卫"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#路由守卫"}},[t._v("#")]),t._v(" 路由守卫")]),t._v(" "),v("p",[t._v("以前"),v("code",[t._v("react")]),t._v("可以和"),v("code",[t._v("vue")]),t._v("一样，有路由的生命周期来做路由守卫，但是从4.0版本开始，把这个钩子删了，作者的理由是：删了更自由。现在就采用高阶组件的形式来体现了")]),t._v(" "),v("h3",{attrs:{id:"redux-thunk、redux-saga"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#redux-thunk、redux-saga"}},[t._v("#")]),t._v(" redux-thunk、redux-saga")]),t._v(" "),v("p",[v("code",[t._v("react-redux")]),t._v("的两个异步处理方案")]),t._v(" "),v("h4",{attrs:{id:""}},[v("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),v("h3",{attrs:{id:"react源码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#react源码"}},[t._v("#")]),t._v(" react源码")]),t._v(" "),v("p",[v("code",[t._v("reactCreateElement")]),t._v("将传入的"),v("code",[t._v("vnode")]),t._v("递归解析，分为纯文本节点、"),v("code",[t._v("class")]),t._v("组件、"),v("code",[t._v("function")]),t._v("组件。然后使用"),v("code",[t._v("appendChild")]),t._v("将节点挂在到"),v("code",[t._v("dom")]),t._v("节点上")]),t._v(" "),v("h3",{attrs:{id:"setstate"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#setstate"}},[t._v("#")]),t._v(" setState")]),t._v(" "),v("p",[t._v("只有在react合成事件和生命周期函数中是异步的，在原生事件和"),v("code",[t._v("setTimeout")]),t._v("、"),v("code",[t._v("setInterval")]),t._v("、"),v("code",[t._v("addEventListener")]),t._v("中是同步的")]),t._v(" "),v("p",[t._v("原生事件绑定不会通过合成事件的处理方式，所以不会进入更新事务的处理流程。"),v("code",[t._v("setTimeout")]),t._v("，在回调执行时已经完成了原更新组件的流程，也不会再进入异步更新流程，所以是同步")]),t._v(" "),v("ol",[v("li",[v("code",[t._v("setState")]),t._v("执行时，"),v("code",[t._v("updater")]),t._v("会将"),v("code",[t._v("partialState")]),t._v("添加带他维护的"),v("code",[t._v("pendingStates")]),t._v("中")]),t._v(" "),v("li",[v("code",[t._v("updateComponent")]),t._v("负责合并"),v("code",[t._v("pendingStates")]),t._v("中所有的"),v("code",[t._v("state")]),t._v("变成一个"),v("code",[t._v("state")])]),t._v(" "),v("li",[v("code",[t._v("forceUpdate")]),t._v("执行新旧"),v("code",[t._v("vnode")]),t._v("比对和"),v("code",[t._v("diff")]),t._v("，最后更新"),v("code",[t._v("dom")])])]),t._v(" "),v("h3",{attrs:{id:"domdiff"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#domdiff"}},[t._v("#")]),t._v(" domdiff")]),t._v(" "),v("ol",[v("li",[v("code",[t._v("oldNode")]),t._v("有，"),v("code",[t._v("newNode")]),t._v("无，或者"),v("code",[t._v("oldNode")]),t._v("无，"),v("code",[t._v("newNode")]),t._v("有，则直接进行删除或者新增操作")]),t._v(" "),v("li",[v("code",[t._v("oldNode")]),t._v("和"),v("code",[t._v("newNode")]),t._v("的"),v("code",[t._v("type")]),t._v("值或者"),v("code",[t._v("key")]),t._v("不一样，则直接进行替换操作")]),t._v(" "),v("li",[v("code",[t._v("oldNode")]),t._v("和"),v("code",[t._v("newNode")]),t._v("的"),v("code",[t._v("type")]),t._v("和"),v("code",[t._v("key")]),t._v("都一样，则进行"),v("code",[t._v("domdiff")]),t._v("来获取"),v("code",[t._v("patch")])])]),t._v(" "),v("h4",{attrs:{id:"-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[t._v("#")])]),t._v(" "),v("h3",{attrs:{id:"react的fiber架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#react的fiber架构"}},[t._v("#")]),t._v(" react的fiber架构")]),t._v(" "),v("h4",{attrs:{id:"requestidlecallback调度逻辑"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#requestidlecallback调度逻辑"}},[t._v("#")]),t._v(" requestIdleCallback调度逻辑")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("nextUnitOfWork")]),t._v("记录下一个调度任务")]),t._v(" "),v("li",[v("code",[t._v("workloop")]),t._v("调度diff或者渲染任务\n"),v("ul",[v("li",[v("code",[t._v("deadLine.timeRemaining()")]),t._v("判断当前帧是否结束")]),t._v(" "),v("li",[t._v("如果有下一个任务，并且当前帧结束")]),t._v(" "),v("li",[t._v("则执行下一个调度任务")])])]),t._v(" "),v("li",[v("code",[t._v("requestIdleCallback")]),t._v("启动空闲时间去处理任务")]),t._v(" "),v("li",[v("code",[t._v("performUnitOfWork")]),t._v("获取下一个调度任务")])]),t._v(" "),v("h4",{attrs:{id:"fiber"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#fiber"}},[t._v("#")]),t._v(" fiber")]),t._v(" "),v("p",[t._v("任务为深度遍历")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("root")]),t._v("去找子元素")]),t._v(" "),v("li",[t._v("子元素接着去找子元素")]),t._v(" "),v("li",[t._v("如果没有子元素则找兄弟元素")]),t._v(" "),v("li",[t._v("兄弟元素如果有子元素则接着找子元素")]),t._v(" "),v("li",[t._v("如果没有子元素则找父元素")])]),t._v(" "),v("h3",{attrs:{id:"网络安全（攻击手段）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络安全（攻击手段）"}},[t._v("#")]),t._v(" 网络安全（攻击手段）")]),t._v(" "),v("h4",{attrs:{id:"xss"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[t._v("#")]),t._v(" xss")]),t._v(" "),v("p",[v("code",[t._v("cross site scripting")]),t._v(" 跨站脚本攻击")]),t._v(" "),v("p",[t._v("运行非本站的"),v("code",[t._v("JavaScript")]),t._v("脚本")]),t._v(" "),v("p",[t._v("防御手段：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("浏览器默认防御：X-XSS-Protection，如果设置0，则关闭默认防御")])]),t._v(" "),v("li",[v("p",[t._v("CSP：可以设置禁止加载本站外的资源")])]),t._v(" "),v("li",[v("p",[t._v("标签转译，可以借助"),v("code",[t._v("xss")]),t._v("这个库进行转译")])]),t._v(" "),v("li",[v("p",[t._v("http only：使js无法读取cookie")])])]),t._v(" "),v("h4",{attrs:{id:"csrf"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[t._v("#")]),t._v(" CSRF")]),t._v(" "),v("p",[v("code",[t._v("Cross site Request Forgery")]),t._v(" 跨站请求伪造")]),t._v(" "),v("p",[t._v("利用用户已登录的身份，在用户不知情下，以用户的名义完成非法操作")]),t._v(" "),v("p",[t._v("在A网站登录时。登录B网站。在B网站利用"),v("code",[t._v("iframe")]),t._v("加载A网站，并使用"),v("code",[t._v("form")]),t._v("表单"),v("code",[t._v("target")]),t._v("设置为A网站。利用用户在A网站的登陆状态发起请求")]),t._v(" "),v("p",[t._v("防御手段：")]),t._v(" "),v("ul",[v("li",[t._v("利用"),v("code",[t._v("referer")]),t._v("判断是否是本网站发起的请求。但是"),v("code",[t._v("https")]),t._v("不发送"),v("code",[t._v("referer")])]),t._v(" "),v("li",[t._v("重要请求要使用验证码")]),t._v(" "),v("li",[v("code",[t._v("cookie")]),t._v("值进行"),v("code",[t._v("hash")]),t._v("：A网站在请求时，不仅仅验证"),v("code",[t._v("hash")]),t._v("，请求中还带有随机数。")])]),t._v(" "),v("h4",{attrs:{id:"clickjacking"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#clickjacking"}},[t._v("#")]),t._v(" clickjacking")]),t._v(" "),v("p",[t._v("点击劫持，一种视觉欺骗攻击手段")]),t._v(" "),v("p",[t._v("在B网站套A网站的"),v("code",[t._v("iframe")]),t._v("，设置为透明，设置到某个和诱惑按钮重合的位置。诱惑用户点击")]),t._v(" "),v("p",[t._v("防御手段：")]),t._v(" "),v("ul",[v("li",[t._v("X-frame-options\n"),v("ul",[v("li",[v("code",[t._v("deny")]),t._v("：不允许被"),v("code",[t._v("iframe")]),t._v("加载")]),t._v(" "),v("li",[v("code",[t._v("sameorigin")]),t._v("：只可被同域名的"),v("code",[t._v("iframe")]),t._v("加载")]),t._v(" "),v("li",[t._v("allow-from：设置白名单")])])])]),t._v(" "),v("h4",{attrs:{id:"sql注入"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#sql注入"}},[t._v("#")]),t._v(" SQL注入")]),t._v(" "),v("p",[t._v("拼接"),v("code",[t._v("sql")]),t._v("，可能被万能密码入侵")]),t._v(" "),v("div",{staticClass:"language-sql extra-class"},[v("pre",{pre:!0,attrs:{class:"language-sql"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" \n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ${name}\n"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("and")]),t._v(" pwd "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("or")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),v("p",[t._v("防御")]),t._v(" "),v("ul",[v("li",[t._v("使用？占位符。[]传参的方式")]),t._v(" "),v("li",[t._v("限制数据库权限")])]),t._v(" "),v("h4",{attrs:{id:"os注入"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#os注入"}},[t._v("#")]),t._v(" os注入")]),t._v(" "),v("p",[t._v("用户输入的内容可以在命令行中执行的时候")]),t._v(" "),v("div",{staticClass:"language-js extra-class"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git clone ${params}"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nparams "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://xxx && rm -rf /* "')]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("exec")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git clone https://xxx && rm -rf /* "')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),v("h4",{attrs:{id:"请求劫持"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#请求劫持"}},[t._v("#")]),t._v(" 请求劫持")]),t._v(" "),v("ul",[v("li",[v("code",[t._v("DNS")]),t._v("劫持："),v("code",[t._v("dns")]),t._v("服务器地址被篡改。")]),t._v(" "),v("li",[v("code",[t._v("http")]),t._v("劫持：运营商劫持？？？，升级"),v("code",[t._v("https")])])]),t._v(" "),v("h4",{attrs:{id:"ddos"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ddos"}},[t._v("#")]),t._v(" DDOS")]),t._v(" "),v("p",[v("code",[t._v("distributed denial of service")])]),t._v(" "),v("p",[t._v("常见方式")]),t._v(" "),v("ul",[v("li",[t._v("syn flood：向目标发送具有欺骗性源ip地址的大量tcp初始链接请求。syn包来利用tcp握手，目标机器响应每个连接请求，等待最后一步，这一步从未发生过，耗尽了进程中的目标资源")]),t._v(" "),v("li",[t._v("http flood：不停的访问你的页面")])]),t._v(" "),v("p",[t._v("防御手段")]),t._v(" "),v("ul",[v("li",[t._v("备份网站")]),t._v(" "),v("li",[v("code",[t._v("http")]),t._v("请求的拦截，高防"),v("code",[t._v("ip")])]),t._v(" "),v("li",[t._v("扩容服务器")])]),t._v(" "),v("h3",{attrs:{id:"网络安全（防御手段）"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#网络安全（防御手段）"}},[t._v("#")]),t._v(" 网络安全（防御手段）")]),t._v(" "),v("h4",{attrs:{id:"用户密码保存手段"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#用户密码保存手段"}},[t._v("#")]),t._v(" 用户密码保存手段")]),t._v(" "),v("p",[t._v("将密码进行"),v("code",[t._v("md5")]),t._v("加密再加盐来提高密码复杂度")]),t._v(" "),v("h4",{attrs:{id:"加密"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#加密"}},[t._v("#")]),t._v(" 加密")]),t._v(" "),v("p",[t._v("REC原理：阮一峰")]),t._v(" "),v("p",[t._v("https://www.josephxia.com//")]),t._v(" "),v("ul",[v("li",[t._v("对称加密：加密和解密都使用同一个秘钥")]),t._v(" "),v("li",[t._v("不对称加密：公钥加密，私钥解密。"),v("code",[t._v("github")]),t._v("代码库上传密码时上传的就是本地生成的公钥")])]),t._v(" "),v("p",[v("code",[t._v("https")]),t._v("加密验证过程")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://wx4.sinaimg.cn/mw690/a0940ce6gy1gcmtwfhhx0j20zn0l8q9g.jpg",alt:""}})])])}),[],!1,null,null,null);e.default=a.exports}}]);