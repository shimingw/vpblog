(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{243:function(a,e,t){"use strict";t.r(e);var r=t(2),s=Object(r.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"数组比对过滤方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组比对过滤方法"}},[a._v("#")]),a._v(" 数组比对过滤方法")]),a._v(" "),t("h3",{attrs:{id:"基础方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础方法"}},[a._v("#")]),a._v(" 基础方法")]),a._v(" "),t("h4",{attrs:{id:"compact"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#compact"}},[a._v("#")]),a._v(" compact")]),a._v(" "),t("p",[a._v("过滤到数据中所有的假值，例如"),t("code",[a._v("false")]),a._v(", "),t("code",[a._v("null")]),a._v(", "),t("code",[a._v("0")]),a._v(", "),t("code",[a._v('""')]),a._v(", "),t("code",[a._v("undefined")]),a._v(", 和 "),t("code",[a._v("NaN")]),a._v(" 都是被认为是“假值”。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("_.compact([0, 1, false, 2, '', 3]);\n// => [1, 2, 3]\n")])])]),t("h3",{attrs:{id:"高阶方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高阶方法"}},[a._v("#")]),a._v(" 高阶方法")]),a._v(" "),t("h4",{attrs:{id:"difference"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#difference"}},[a._v("#")]),a._v(" difference")]),a._v(" "),t("p",[a._v("检查某个数组，将特定的值过滤掉，过滤规则为"),t("code",[a._v("===")]),a._v("，如果比较返回"),t("code",[a._v("false")]),a._v("则保留")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('const obj = {name:1111111}\nconsole.log(\n    _.difference([obj, "2", 1], [obj, 2])\n);\n// => ["2", 1]\n')])])]),t("h4",{attrs:{id:"differenceby"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#differenceby"}},[a._v("#")]),a._v(" differenceBy")]),a._v(" "),t("p",[a._v("与"),t("code",[a._v("difference")]),a._v("相比，多了一个前置步骤，数组中的每个值在比较前都会过一遍迭代器中的函数，最后比较返回"),t("code",[a._v("false")]),a._v("则保留")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("// 数组中的每个值比较前，都会执行Math.floor方法，执行后的结果相同，则认为需要过滤\n_.differenceBy([3.1, 2.2, 1.3], [4.4, 2.5], Math.floor);\n// => [3.1, 1.3]\n\n// 会取属性中的x值进行比较，2种写法是一样的效果\n_.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }],data=>data.x)\n_.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n// => [{ 'x': 2 }]\n")])])]),t("h4",{attrs:{id:"differencewith"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#differencewith"}},[a._v("#")]),a._v(" differenceWith")]),a._v(" "),t("p",[a._v("与"),t("code",[a._v("difference")]),a._v("相比，可以自定义比较方法，不一定使用"),t("code",[a._v("===")]),a._v("进行比较，比较返回"),t("code",[a._v("false")]),a._v("则保留")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("// _.isEqual，对两个引用值也会进行深度遍历进行比较，例如_.isEqual({},{})返回true\nvar objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\n_.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n// => [{ 'x': 2, 'y': 1 }]\n\n// 可以自定义比较规则\n_.differenceWith(objects, [{ 'x': 1, 'y': 2 }], (a,b)=>{\n//比较的逻辑代码\n});\n")])])]),t("h4",{attrs:{id:"intersection"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#intersection"}},[a._v("#")]),a._v(" intersection")]),a._v(" "),t("p",[a._v("类似"),t("code",[a._v("difference")]),a._v("，比较规则为"),t("code",[a._v("===")]),a._v("，如果比较返回"),t("code",[a._v("true")]),a._v("则保留（可理解为获取给定数组的交集）")]),a._v(" "),t("h4",{attrs:{id:"intersectionby"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#intersectionby"}},[a._v("#")]),a._v(" intersectionBy")]),a._v(" "),t("p",[a._v("类似"),t("code",[a._v("differenceBy")]),a._v("，比较返回"),t("code",[a._v("true")]),a._v("则保留")]),a._v(" "),t("h4",{attrs:{id:"intersectionwith"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#intersectionwith"}},[a._v("#")]),a._v(" intersectionWith")]),a._v(" "),t("p",[a._v("类似"),t("code",[a._v("differenceWith")]),a._v("，比较返回"),t("code",[a._v("true")]),a._v("则保留")]),a._v(" "),t("h2",{attrs:{id:"数组切片方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组切片方法"}},[a._v("#")]),a._v(" 数组切片方法")]),a._v(" "),t("h3",{attrs:{id:"基础方法-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础方法-2"}},[a._v("#")]),a._v(" 基础方法")]),a._v(" "),t("h4",{attrs:{id:"drop"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#drop"}},[a._v("#")]),a._v(" drop")]),a._v(" "),t("p",[a._v("创建一个切片数组，去除"),t("code",[a._v("array")]),a._v("前面的"),t("code",[a._v("n")]),a._v("个元素。（"),t("code",[a._v("n")]),a._v("默认值为1。）")]),a._v(" "),t("h4",{attrs:{id:"dropright"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dropright"}},[a._v("#")]),a._v(" dropRight")]),a._v(" "),t("p",[a._v("创建一个切片数组，去除"),t("code",[a._v("array")]),a._v("尾部的"),t("code",[a._v("n")]),a._v("个元素。（"),t("code",[a._v("n")]),a._v("默认值为1。）")]),a._v(" "),t("h4",{attrs:{id:"initial"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#initial"}},[a._v("#")]),a._v(" initial")]),a._v(" "),t("p",[a._v("获取数组"),t("code",[a._v("array")]),a._v("中除了最后一个元素之外的所有元素（去除数组"),t("code",[a._v("array")]),a._v("中的最后一个元素）")]),a._v(" "),t("h3",{attrs:{id:"高阶方法-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高阶方法-2"}},[a._v("#")]),a._v(" 高阶方法")]),a._v(" "),t("h4",{attrs:{id:"droprightwhile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#droprightwhile"}},[a._v("#")]),a._v(" dropRightWhile")]),a._v(" "),t("p",[a._v("从左往右截取数组，直到返回false，停止截取")]),a._v(" "),t("h4",{attrs:{id:"dropwhile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dropwhile"}},[a._v("#")]),a._v(" dropWhile")]),a._v(" "),t("p",[a._v("从左往右截取数组，直到返回false，开始截取")]),a._v(" "),t("h2",{attrs:{id:"数组查找方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组查找方法"}},[a._v("#")]),a._v(" 数组查找方法")]),a._v(" "),t("h3",{attrs:{id:"基础方法-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基础方法-3"}},[a._v("#")]),a._v(" 基础方法")]),a._v(" "),t("h4",{attrs:{id:"findindex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#findindex"}},[a._v("#")]),a._v(" findIndex")]),a._v(" "),t("p",[a._v("比原生"),t("code",[a._v("findIndex")]),a._v("，多了一个参数，可以指定查找的起始索引")]),a._v(" "),t("h4",{attrs:{id:"findlastindex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#findlastindex"}},[a._v("#")]),a._v(" findLastIndex")]),a._v(" "),t("p",[a._v("与"),t("code",[a._v("findIndex")]),a._v("类似，区别是它是从右到左进行查找，同时也可以指定查找的起始索引")]),a._v(" "),t("h4",{attrs:{id:"indexof"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#indexof"}},[a._v("#")]),a._v(" indexOf")]),a._v(" "),t("p",[a._v("与原生的"),t("code",[a._v("indexof")]),a._v("一致，功能类似"),t("code",[a._v("findIndex")])]),a._v(" "),t("h4",{attrs:{id:"lastindexof"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lastindexof"}},[a._v("#")]),a._v(" lastIndexOf")]),a._v(" "),t("p",[a._v("类似"),t("code",[a._v("indexOf")]),a._v("，从右到左查找")]),a._v(" "),t("h4",{attrs:{id:"head"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[a._v("#")]),a._v(" head")]),a._v(" "),t("p",[a._v("获取数组 "),t("code",[a._v("array")]),a._v(" 的第一个元素（ps：参数如果不为数组则返回"),t("code",[a._v("undefined")]),a._v("，优于"),t("code",[a._v("arr[0]")]),a._v("）")]),a._v(" "),t("h4",{attrs:{id:"last"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#last"}},[a._v("#")]),a._v(" last")]),a._v(" "),t("p",[a._v("获取"),t("code",[a._v("array")]),a._v("中的最后一个元素。好处同"),t("code",[a._v("head")])]),a._v(" "),t("h4",{attrs:{id:"nth"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nth"}},[a._v("#")]),a._v(" nth")]),a._v(" "),t("p",[a._v("获取"),t("code",[a._v("array")]),a._v("数组的第n个元素。如果"),t("code",[a._v("n")]),a._v("为负数，则返回从数组结尾开始的第n个元素。")]),a._v(" "),t("h4",{attrs:{id:"tail"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tail"}},[a._v("#")]),a._v(" tail")]),a._v(" "),t("p",[a._v("获取除了"),t("code",[a._v("array")]),a._v("数组第一个元素以外的全部元素。")]),a._v(" "),t("h4",{attrs:{id:"take"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#take"}},[a._v("#")]),a._v(" take")]),a._v(" "),t("p",[a._v("创建一个数组切片，从"),t("code",[a._v("array")]),a._v("数组的起始元素开始提取"),t("code",[a._v("n")]),a._v("个元素。")]),a._v(" "),t("h4",{attrs:{id:"takeright"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#takeright"}},[a._v("#")]),a._v(" takeRight")]),a._v(" "),t("p",[a._v("创建一个数组切片，从"),t("code",[a._v("array")]),a._v("数组的最后一个元素开始提取"),t("code",[a._v("n")]),a._v("个元素。")]),a._v(" "),t("h3",{attrs:{id:"高阶方法-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#高阶方法-3"}},[a._v("#")]),a._v(" 高阶方法")]),a._v(" "),t("h4",{attrs:{id:"sortedindex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sortedindex"}},[a._v("#")]),a._v(" sortedIndex")]),a._v(" "),t("p",[a._v("用二进制的方式进行比较，获取某个值插入数组的位置")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("_.sortedIndex([30, 50], 40);\n// => 1\n")])])]),t("h4",{attrs:{id:"sortedindexby"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sortedindexby"}},[a._v("#")]),a._v(" sortedIndexBy")]),a._v(" "),t("p",[a._v("与"),t("code",[a._v("sortedIndex")]),a._v("类似，区别是，在比较前，可使数组中的值经过特定方法的转换")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("var objects = [{ 'x': 4 }, { 'x': 5 }];\n \n_.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n// => 0\n")])])]),t("h4",{attrs:{id:"sortedindexof"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sortedindexof"}},[a._v("#")]),a._v(" sortedIndexOf")]),a._v(" "),t("p",[a._v("这个方法类似 "),t("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#indexOf",target:"_blank",rel:"noopener noreferrer"}},[t("code",[a._v("_.indexOf")]),t("OutboundLink")],1),a._v("，它只能在已排序的数组上进行检索")]),a._v(" "),t("h4",{attrs:{id:"sortedlastindex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sortedlastindex"}},[a._v("#")]),a._v(" sortedLastIndex")]),a._v(" "),t("p",[a._v("此方法类似于 "),t("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#sortedIndex",target:"_blank",rel:"noopener noreferrer"}},[t("code",[a._v("_.sortedIndex")]),t("OutboundLink")],1),a._v("，检索尽可能大的索引")]),a._v(" "),t("h2",{attrs:{id:"数组突变方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组突变方法"}},[a._v("#")]),a._v(" 数组突变方法")]),a._v(" "),t("blockquote",[t("p",[a._v("会使数组产生突变，即会修改传入的数组本身")])]),a._v(" "),t("h4",{attrs:{id:"pull"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pull"}},[a._v("#")]),a._v(" pull")]),a._v(" "),t("p",[a._v("移除数组"),t("code",[a._v("array")]),a._v("中所有和给定值相等的元素，使用"),t("code",[a._v("===")])]),a._v(" "),t("p",[a._v("方法类似"),t("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#difference",target:"_blank",rel:"noopener noreferrer"}},[t("code",[a._v("_.difference")]),t("OutboundLink")],1),a._v(", 不同是这个方法会改变数组 "),t("code",[a._v("array")]),a._v("，并且参数是单个传入")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("var array = [1, 2, 3, 1, 2, 3];\n \n_.pull(array, 2, 3);\nconsole.log(array);\n// => [1, 1]\n")])])]),t("h4",{attrs:{id:"pullall"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pullall"}},[a._v("#")]),a._v(" pullAll")]),a._v(" "),t("p",[a._v("方法类似"),t("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#difference",target:"_blank",rel:"noopener noreferrer"}},[t("code",[a._v("_.difference")]),t("OutboundLink")],1),a._v(", 不同是这个方法会改变数组 "),t("code",[a._v("array")]),a._v("。")]),a._v(" "),t("h4",{attrs:{id:"pullallby"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pullallby"}},[a._v("#")]),a._v(" pullAllBy")]),a._v(" "),t("p",[a._v("方法类似 "),t("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#differenceBy",target:"_blank",rel:"noopener noreferrer"}},[t("code",[a._v("_.differenceBy")]),t("OutboundLink")],1),a._v(", 不同是这个方法会改变数组 "),t("code",[a._v("array")])]),a._v(" "),t("h4",{attrs:{id:"pullallwith"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pullallwith"}},[a._v("#")]),a._v(" pullAllWith")]),a._v(" "),t("p",[a._v("方法类似 "),t("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#differenceWith",target:"_blank",rel:"noopener noreferrer"}},[t("code",[a._v("_.differenceWith")]),t("OutboundLink")],1),a._v(" , 不同是这个方法会改变数组 "),t("code",[a._v("array")])]),a._v(" "),t("h4",{attrs:{id:"pullat"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pullat"}},[a._v("#")]),a._v(" pullAt")]),a._v(" "),t("p",[a._v("根据索引 "),t("code",[a._v("indexes")]),a._v("，移除"),t("code",[a._v("array")]),a._v("中对应的元素，并返回被移除元素的数组。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("var array = [5, 10, 15, 20];\nvar evens = _.pullAt(array, 1, 3);\n \nconsole.log(array);\n// => [5, 15]\n \nconsole.log(evens);\n// => [10, 20]\n")])])]),t("h4",{attrs:{id:"remove"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#remove"}},[a._v("#")]),a._v(" remove")]),a._v(" "),t("p",[a._v("根据规则，移除"),t("code",[a._v("array")]),a._v("中对应的元素，并返回被移除元素的数组。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("var array = [1, 2, 3, 4];\nvar evens = _.remove(array, function(n) {\n  return n % 2 == 0;\n});\n \nconsole.log(array);\n// => [1, 3]\n \nconsole.log(evens);\n// => [2, 4]\n")])])]),t("h4",{attrs:{id:"reverse"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#reverse"}},[a._v("#")]),a._v(" reverse")]),a._v(" "),t("p",[a._v("反转数组")]),a._v(" "),t("h2",{attrs:{id:"数组嵌套方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组嵌套方法"}},[a._v("#")]),a._v(" 数组嵌套方法")]),a._v(" "),t("h3",{attrs:{id:"flatten"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flatten"}},[a._v("#")]),a._v(" flatten")]),a._v(" "),t("p",[a._v("减少一级"),t("code",[a._v("array")]),a._v("嵌套深度")]),a._v(" "),t("h3",{attrs:{id:"flattendeep"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flattendeep"}},[a._v("#")]),a._v(" flattenDeep")]),a._v(" "),t("p",[a._v("将"),t("code",[a._v("array")]),a._v("递归为一维数组")]),a._v(" "),t("h3",{attrs:{id:"flattendepth"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flattendepth"}},[a._v("#")]),a._v(" flattenDepth")]),a._v(" "),t("p",[a._v("自定义减少 "),t("code",[a._v("array")]),a._v(" 的嵌套层级")]),a._v(" "),t("h2",{attrs:{id:"数组去重方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数组去重方法"}},[a._v("#")]),a._v(" 数组去重方法")]),a._v(" "),t("h3",{attrs:{id:"uniq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uniq"}},[a._v("#")]),a._v(" uniq")]),a._v(" "),t("p",[a._v("对数组中的值进行去重，比较规则"),t("code",[a._v("===")])]),a._v(" "),t("h3",{attrs:{id:"uniqby"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uniqby"}},[a._v("#")]),a._v(" uniqBy")]),a._v(" "),t("p",[a._v("这个方法类似 "),t("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#uniq",target:"_blank",rel:"noopener noreferrer"}},[t("code",[a._v("_.uniq")]),t("OutboundLink")],1),a._v(" ，在每个值比较前，可对每个值进行一次转换")]),a._v(" "),t("h3",{attrs:{id:"uniqwith"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uniqwith"}},[a._v("#")]),a._v(" uniqWith")]),a._v(" "),t("p",[a._v("这个方法类似 "),t("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#uniq",target:"_blank",rel:"noopener noreferrer"}},[t("code",[a._v("_.uniq")]),t("OutboundLink")],1),a._v("，在两个值比较时，可以自定义比较规则")]),a._v(" "),t("h3",{attrs:{id:"sorteduniq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sorteduniq"}},[a._v("#")]),a._v(" sortedUniq")]),a._v(" "),t("p",[a._v("这个方法类似 "),t("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#uniq",target:"_blank",rel:"noopener noreferrer"}},[t("code",[a._v("_.uniq")]),t("OutboundLink")],1),a._v("，但是它只会对相邻的值进行去重")]),a._v(" "),t("h3",{attrs:{id:"sorteduniqby"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sorteduniqby"}},[a._v("#")]),a._v(" sortedUniqBy")]),a._v(" "),t("p",[a._v("这个方法类似 "),t("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#uniqBy",target:"_blank",rel:"noopener noreferrer"}},[t("code",[a._v("_.uniqBy")]),t("OutboundLink")],1),a._v("，但是它只会对相邻的值进行去重")]),a._v(" "),t("h3",{attrs:{id:"union"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#union"}},[a._v("#")]),a._v(" union")]),a._v(" "),t("p",[a._v("对多个数组进行去重，比较规则"),t("code",[a._v("===")])]),a._v(" "),t("h3",{attrs:{id:"unionby"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#unionby"}},[a._v("#")]),a._v(" unionBy")]),a._v(" "),t("p",[a._v("方法类似 "),t("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#union",target:"_blank",rel:"noopener noreferrer"}},[t("code",[a._v("_.union")]),t("OutboundLink")],1),a._v("，在每个值比较前，可对每个值进行一次转换")]),a._v(" "),t("h3",{attrs:{id:"uniqwith-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#uniqwith-2"}},[a._v("#")]),a._v(" uniqWith")]),a._v(" "),t("p",[a._v("方法类似 "),t("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#union",target:"_blank",rel:"noopener noreferrer"}},[t("code",[a._v("_.union")]),t("OutboundLink")],1),a._v("，在两个值比较时，可以自定义比较规则")])])}),[],!1,null,null,null);e.default=s.exports}}]);