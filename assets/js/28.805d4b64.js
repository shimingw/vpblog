(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{346:function(e,t,r){"use strict";r.r(t);var a=r(10),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h2",{attrs:{id:"数组方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组方法"}},[e._v("#")]),e._v(" 数组方法")]),e._v(" "),r("h3",{attrs:{id:"拆分方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#拆分方法"}},[e._v("#")]),e._v(" 拆分方法")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_chunkarray-size1",target:"_blank",rel:"noopener noreferrer"}},[e._v("chunk"),r("OutboundLink")],1),e._v("：将数组（array）拆分成多个 "),r("code",[e._v("size")]),e._v(" 长度的区块，并将这些区块组成一个新数组。 如果"),r("code",[e._v("array")]),e._v(" 无法被分割成全部等长的区块，那么最后剩余的元素将组成一个区块。")])]),e._v(" "),r("h3",{attrs:{id:"链接方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#链接方法"}},[e._v("#")]),e._v(" 链接方法")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_concatarray-values",target:"_blank",rel:"noopener noreferrer"}},[e._v("concat"),r("OutboundLink")],1),e._v("：创建一个新数组，将"),r("code",[e._v("array")]),e._v("与任何数组 或 值连接在一起。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_xorarrays",target:"_blank",rel:"noopener noreferrer"}},[e._v("xor"),r("OutboundLink")],1),e._v("：创建一个给定数组唯一值的数组，使用 "),r("a",{attrs:{href:"https://en.wikipedia.org/wiki/Symmetric_difference",target:"_blank",rel:"noopener noreferrer"}},[e._v("symmetric difference"),r("OutboundLink")],1),e._v("（交集取反）做等值比较。返回值的顺序取决于他们数组的出现顺序。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_xorbyarrays-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("xorBy"),r("OutboundLink")],1),e._v("：方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#xor",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.xor"),r("OutboundLink")],1),e._v(" ，除了它接受 "),r("code",[e._v("iteratee")]),e._v("（迭代器），这个迭代器 调用每一个 "),r("code",[e._v("arrays")]),e._v("（数组）的每一个值，以生成比较的新值。iteratee 调用一个参数： "),r("em",[e._v("(value)")]),e._v(".")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_xorwitharrays-comparator",target:"_blank",rel:"noopener noreferrer"}},[e._v("xorWith"),r("OutboundLink")],1),e._v("：该方法是像 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#xor",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.xor"),r("OutboundLink")],1),e._v("，除了它接受一个 "),r("code",[e._v("comparator")]),e._v(" ，以调用比较数组的元素。 comparator 调用 2 个参数："),r("em",[e._v("(arrVal, othVal)")]),e._v(".")])]),e._v(" "),r("h3",{attrs:{id:"过滤方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#过滤方法"}},[e._v("#")]),e._v(" 过滤方法")]),e._v(" "),r("blockquote",[r("p",[e._v("将某个数组中的值按照特性规则进行过滤")])]),e._v(" "),r("h4",{attrs:{id:"根据值过滤"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#根据值过滤"}},[e._v("#")]),e._v(" 根据值过滤")]),e._v(" "),r("h5",{attrs:{id:"纯的函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#纯的函数"}},[e._v("#")]),e._v(" 纯的函数")]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_compactarray",target:"_blank",rel:"noopener noreferrer"}},[e._v("compact"),r("OutboundLink")],1),e._v("：创建一个新数组，包含原数组中所有的非假值元素。例如"),r("code",[e._v("false")]),e._v(", "),r("code",[e._v("null")]),e._v(", "),r("code",[e._v("0")]),e._v(", "),r("code",[e._v('""')]),e._v(", "),r("code",[e._v("undefined")]),e._v(", 和 "),r("code",[e._v("NaN")]),e._v(" 都是被认为是“假值”。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_differencearray-values",target:"_blank",rel:"noopener noreferrer"}},[e._v("difference"),r("OutboundLink")],1),e._v("：检查某个数组，将特定的值过滤掉，过滤规则为"),r("code",[e._v("===")]),e._v("，如果比较返回"),r("code",[e._v("false")]),e._v("则保留")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_differencebyarray-values-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("differenceBy"),r("OutboundLink")],1),e._v("：与"),r("code",[e._v("difference")]),e._v("相比，多了一个前置步骤，数组中的每个值在比较前都会过一遍迭代器中的函数，最后比较返回"),r("code",[e._v("false")]),e._v("则保留")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_differencewitharray-values-comparator",target:"_blank",rel:"noopener noreferrer"}},[e._v("differenceWith"),r("OutboundLink")],1),e._v("：与"),r("code",[e._v("difference")]),e._v("相比，可以自定义比较方法，不一定使用"),r("code",[e._v("===")]),e._v("进行比较，比较返回"),r("code",[e._v("false")]),e._v("则保留")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_intersectionarrays",target:"_blank",rel:"noopener noreferrer"}},[e._v("intersection"),r("OutboundLink")],1),e._v("：类似"),r("code",[e._v("difference")]),e._v("，比较规则为"),r("code",[e._v("===")]),e._v("，如果比较返回"),r("code",[e._v("true")]),e._v("则保留（可理解为获取给定数组的交集）")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_intersectionarrays",target:"_blank",rel:"noopener noreferrer"}},[e._v("intersection"),r("OutboundLink")],1),e._v("：类似"),r("code",[e._v("differenceBy")]),e._v("，比较返回"),r("code",[e._v("true")]),e._v("则保留")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_intersectionwitharrays-comparator",target:"_blank",rel:"noopener noreferrer"}},[e._v("intersectionWith"),r("OutboundLink")],1),e._v("：类似"),r("code",[e._v("differenceWith")]),e._v("，比较返回"),r("code",[e._v("true")]),e._v("则保留")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_withoutarray-values",target:"_blank",rel:"noopener noreferrer"}},[e._v("without"),r("OutboundLink")],1),e._v("：创建一个剔除所有给定值的新数组，剔除值的时候使用"),r("code",[e._v("===")])])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_filtercollection-predicate_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("filter")]),r("OutboundLink")],1),e._v("：类似原生"),r("code",[e._v("filter")])])]),e._v(" "),r("li")]),e._v(" "),r("h5",{attrs:{id:"不纯的函数"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不纯的函数"}},[e._v("#")]),e._v(" 不纯的函数")]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_pullarray-values",target:"_blank",rel:"noopener noreferrer"}},[e._v("pull"),r("OutboundLink")],1),e._v("：移除数组"),r("code",[e._v("array")]),e._v("中所有和给定值相等的元素，使用"),r("code",[e._v("===")])]),e._v(" "),r("p",[e._v("方法类似"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#difference",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.difference"),r("OutboundLink")],1),e._v(", 不同是这个方法会改变数组 "),r("code",[e._v("array")]),e._v("，并且参数是单个传入")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_pullallarray-values",target:"_blank",rel:"noopener noreferrer"}},[e._v("pullAll"),r("OutboundLink")],1),e._v("：方法类似"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#difference",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.difference"),r("OutboundLink")],1),e._v(", 不同是这个方法会改变数组 "),r("code",[e._v("array")]),e._v("。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_pullallbyarray-values-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("pullAllBy"),r("OutboundLink")],1),e._v("：方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#differenceBy",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.differenceBy"),r("OutboundLink")],1),e._v(", 不同是这个方法会改变数组 "),r("code",[e._v("array")])])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_pullallwitharray-values-comparator",target:"_blank",rel:"noopener noreferrer"}},[e._v("pullAllWith"),r("OutboundLink")],1),e._v("：方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#differenceWith",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.differenceWith"),r("OutboundLink")],1),e._v(" , 不同是这个方法会改变数组 "),r("code",[e._v("array")])])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_removearray-predicate_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("remove"),r("OutboundLink")],1),e._v("：根据规则，移除"),r("code",[e._v("array")]),e._v("中对应的元素，并返回被移除元素的数组。")])])]),e._v(" "),r("h4",{attrs:{id:"根据索引过滤"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#根据索引过滤"}},[e._v("#")]),e._v(" 根据索引过滤")]),e._v(" "),r("h5",{attrs:{id:"不纯的函数-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不纯的函数-2"}},[e._v("#")]),e._v(" 不纯的函数")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_pullatarray-indexes",target:"_blank",rel:"noopener noreferrer"}},[e._v("pullAt"),r("OutboundLink")],1),e._v("：根据索引 "),r("code",[e._v("indexes")]),e._v("，移除"),r("code",[e._v("array")]),e._v("中对应的元素，并返回被移除元素的数组。")])]),e._v(" "),r("h3",{attrs:{id:"切片方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#切片方法"}},[e._v("#")]),e._v(" 切片方法")]),e._v(" "),r("blockquote",[r("p",[e._v("获取某个数组中，特定的值")])]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_droparray-n1",target:"_blank",rel:"noopener noreferrer"}},[e._v("drop"),r("OutboundLink")],1),e._v("：创建一个切片数组，去除"),r("code",[e._v("array")]),e._v("前面的"),r("code",[e._v("n")]),e._v("个元素。（"),r("code",[e._v("n")]),e._v("默认值为 1。）")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_droprightarray-n1",target:"_blank",rel:"noopener noreferrer"}},[e._v("dropRight"),r("OutboundLink")],1),e._v("：创建一个切片数组，去除"),r("code",[e._v("array")]),e._v("尾部的"),r("code",[e._v("n")]),e._v("个元素。（"),r("code",[e._v("n")]),e._v("默认值为 1。）")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_droprightwhilearray-predicate_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("dropRightWhile"),r("OutboundLink")],1),e._v("：从左往右截取数组，直到返回 false，停止截取")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_dropwhilearray-predicate_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("dropWhile"),r("OutboundLink")],1),e._v("：从左往右截取数组，直到返回 false，开始截取")])]),e._v(" "),r("h3",{attrs:{id:"填充方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#填充方法"}},[e._v("#")]),e._v(" 填充方法")]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_fillarray-value-start0-endarraylength",target:"_blank",rel:"noopener noreferrer"}},[e._v("fill"),r("OutboundLink")],1),e._v("：使用 "),r("code",[e._v("value")]),e._v(" 值来填充（替换） "),r("code",[e._v("array")]),e._v("，从"),r("code",[e._v("start")]),e._v("位置开始, 到"),r("code",[e._v("end")]),e._v("位置结束（但不包含"),r("code",[e._v("end")]),e._v("位置）。")]),e._v(" "),r("p",[r("strong",[e._v("Note:")]),e._v(" 这个方法会改变 "),r("code",[e._v("array")]),e._v("（不是创建新数组）。")])])]),e._v(" "),r("h3",{attrs:{id:"查找方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#查找方法"}},[e._v("#")]),e._v(" 查找方法")]),e._v(" "),r("blockquote",[r("p",[e._v("根据规则，获取数组中，某个位置的值或索引")])]),e._v(" "),r("h4",{attrs:{id:"根据值获取索引"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#根据值获取索引"}},[e._v("#")]),e._v(" 根据值获取索引")]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_findindexarray-predicate_identity-fromindex0",target:"_blank",rel:"noopener noreferrer"}},[e._v("findIndex"),r("OutboundLink")],1),e._v("：比原生"),r("code",[e._v("findIndex")]),e._v("，多了一个参数，可以指定查找的起始索引")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_findlastindexarray-predicate_identity-fromindexarraylength-1",target:"_blank",rel:"noopener noreferrer"}},[e._v("findLastIndex"),r("OutboundLink")],1),e._v("：与"),r("code",[e._v("findIndex")]),e._v("类似，区别是它是从右到左进行查找，同时也可以指定查找的起始索引")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_indexofarray-value-fromindex0",target:"_blank",rel:"noopener noreferrer"}},[e._v("indexOf"),r("OutboundLink")],1),e._v("：与原生的"),r("code",[e._v("indexof")]),e._v("一致，功能类似"),r("code",[e._v("findIndex")])])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_lastindexofarray-value-fromindexarraylength-1",target:"_blank",rel:"noopener noreferrer"}},[e._v("lastIndexOf"),r("OutboundLink")],1),e._v("：类似"),r("code",[e._v("indexOf")]),e._v("，从右到左查找")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_includescollection-value-fromindex0",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("includes")]),r("OutboundLink")],1),e._v("：检索某个值是否在数组中，同时也可以用来检索对象的 key，或者字符串的"),r("code",[e._v("include")])])])]),e._v(" "),r("h4",{attrs:{id:"根据索引获取值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#根据索引获取值"}},[e._v("#")]),e._v(" 根据索引获取值")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_headarray",target:"_blank",rel:"noopener noreferrer"}},[e._v("head"),r("OutboundLink")],1),e._v("：获取数组 "),r("code",[e._v("array")]),e._v(" 的第一个元素（ps：参数如果不为数组则返回"),r("code",[e._v("undefined")]),e._v("，优于"),r("code",[e._v("arr[0]")]),e._v("）")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_initialarray",target:"_blank",rel:"noopener noreferrer"}},[e._v("initial"),r("OutboundLink")],1),e._v("：获取数组"),r("code",[e._v("array")]),e._v("中除了最后一个元素之外的所有元素（去除数组"),r("code",[e._v("array")]),e._v("中的最后一个元素）")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_lastarray",target:"_blank",rel:"noopener noreferrer"}},[e._v("last"),r("OutboundLink")],1),e._v("：获取"),r("code",[e._v("array")]),e._v("中的最后一个元素。好处同"),r("code",[e._v("head")])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_ntharray-n0",target:"_blank",rel:"noopener noreferrer"}},[e._v("nth"),r("OutboundLink")],1),e._v("：获取"),r("code",[e._v("array")]),e._v("数组的第 n 个元素。如果"),r("code",[e._v("n")]),e._v("为负数，则返回从数组结尾开始的第 n 个元素。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_slicearray-start0-endarraylength",target:"_blank",rel:"noopener noreferrer"}},[e._v("slice"),r("OutboundLink")],1),e._v("：裁剪数组"),r("code",[e._v("array")]),e._v("，从 "),r("code",[e._v("start")]),e._v(" 位置开始到"),r("code",[e._v("end")]),e._v("结束，但不包括 "),r("code",[e._v("end")]),e._v(" 本身的位置。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_sortedindexarray-value",target:"_blank",rel:"noopener noreferrer"}},[e._v("sortedIndex"),r("OutboundLink")],1),e._v("：用二进制的方式进行比较，获取某个值插入数组尽可能小的索引位置")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_sortedindexbyarray-value-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("sortedIndexBy"),r("OutboundLink")],1),e._v("：与"),r("code",[e._v("sortedIndex")]),e._v("类似，区别是，在比较前，可使数组中的值经过特定方法的转换")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_sortedindexofarray-value",target:"_blank",rel:"noopener noreferrer"}},[e._v("sortedIndexOf"),r("OutboundLink")],1),e._v("：这个方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#indexOf",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.indexOf"),r("OutboundLink")],1),e._v("，它只能在已排序的数组上进行检索")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_sortedlastindexarray-value",target:"_blank",rel:"noopener noreferrer"}},[e._v("sortedLastIndex"),r("OutboundLink")],1),e._v("：此方法类似于 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#sortedIndex",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.sortedIndex"),r("OutboundLink")],1),e._v("，检索尽可能大的索引")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_sortedlastindexbyarray-value-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("sortedLastIndexBy"),r("OutboundLink")],1),e._v("：与"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_sortedindexbyarray-value-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("sortedIndexBy"),r("OutboundLink")],1),e._v("类似，获取尽可能大的索引")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_sortedlastindexofarray-value",target:"_blank",rel:"noopener noreferrer"}},[e._v("sortedLastIndexOf"),r("OutboundLink")],1),e._v("：与"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_sortedindexofarray-value",target:"_blank",rel:"noopener noreferrer"}},[e._v("sortedIndexOf"),r("OutboundLink")],1),e._v("，类似获取尽可能大的索引")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_tailarray",target:"_blank",rel:"noopener noreferrer"}},[e._v("tail"),r("OutboundLink")],1),e._v("：获取除了"),r("code",[e._v("array")]),e._v("数组第一个元素以外的全部元素。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_takearray-n1",target:"_blank",rel:"noopener noreferrer"}},[e._v("take"),r("OutboundLink")],1),e._v("：创建一个数组切片，从"),r("code",[e._v("array")]),e._v("数组的起始元素开始提取"),r("code",[e._v("n")]),e._v("个元素。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_takerightarray-n1",target:"_blank",rel:"noopener noreferrer"}},[e._v("takeRight"),r("OutboundLink")],1),e._v("：创建一个数组切片，从"),r("code",[e._v("array")]),e._v("数组的最后一个元素开始提取"),r("code",[e._v("n")]),e._v("个元素。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_takerightwhilearray-predicate_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("takeRightWhile"),r("OutboundLink")],1),e._v("：与"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_takerightarray-n1",target:"_blank",rel:"noopener noreferrer"}},[e._v("takeRight"),r("OutboundLink")],1),e._v("类似，区别是直到返回"),r("code",[e._v("false")]),e._v("，停止。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_takewhilearray-predicate_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("takeWhile"),r("OutboundLink")],1),e._v("：与"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_takerightwhilearray-predicate_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("takeRightWhile"),r("OutboundLink")],1),e._v("类似，区别是从头开始取值。")])]),e._v(" "),r("h4",{attrs:{id:"根据规则获取值"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#根据规则获取值"}},[e._v("#")]),e._v(" 根据规则获取值")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_findcollection-predicate_identity-fromindex0",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("find")]),r("OutboundLink")],1),e._v("：类似原生"),r("code",[e._v("findOne")])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_findlastcollection-predicate_identity-fromindexcollectionlength-1",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("findLast")]),r("OutboundLink")],1),e._v("：区别于"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_findcollection-predicate_identity-fromindex0",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("find")]),r("OutboundLink")],1),e._v("是从后往前找")]),e._v(" "),r("li")]),e._v(" "),r("h3",{attrs:{id:"去重方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#去重方法"}},[e._v("#")]),e._v(" 去重方法")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_sorteduniqarray",target:"_blank",rel:"noopener noreferrer"}},[e._v("sortedUniq"),r("OutboundLink")],1),e._v("：这个方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#uniq",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.uniq"),r("OutboundLink")],1),e._v("，但是它只会对相邻的值进行去重")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_sorteduniqbyarray-iteratee",target:"_blank",rel:"noopener noreferrer"}},[e._v("sortedUniqBy"),r("OutboundLink")],1),e._v("：这个方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#uniqBy",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.uniqBy"),r("OutboundLink")],1),e._v("，但是它只会对相邻的值进行去重")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_unionarrays",target:"_blank",rel:"noopener noreferrer"}},[e._v("union"),r("OutboundLink")],1),e._v("：对多个数组进行去重，比较规则"),r("code",[e._v("===")])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_unionbyarrays-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("unionBy"),r("OutboundLink")],1),e._v("：方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#union",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.union"),r("OutboundLink")],1),e._v("，在每个值比较前，可对每个值进行一次转换")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_unionwitharrays-comparator",target:"_blank",rel:"noopener noreferrer"}},[e._v("unionWith"),r("OutboundLink")],1),e._v("：方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#union",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.union"),r("OutboundLink")],1),e._v("，在两个值比较时，可以自定义比较规则")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_uniqarray",target:"_blank",rel:"noopener noreferrer"}},[e._v("uniq"),r("OutboundLink")],1),e._v("：对单个数组中的值进行去重，比较规则"),r("code",[e._v("===")])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_uniqbyarray-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("uniqBy"),r("OutboundLink")],1),e._v("：这个方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#uniq",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.uniq"),r("OutboundLink")],1),e._v(" ，在每个值比较前，可对每个值进行一次转换")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_uniqwitharray-comparator",target:"_blank",rel:"noopener noreferrer"}},[e._v("uniqWith"),r("OutboundLink")],1),e._v("：这个方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#uniq",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.uniq"),r("OutboundLink")],1),e._v("，在两个值比较时，可以自定义比较规则")])]),e._v(" "),r("h3",{attrs:{id:"减少嵌套方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#减少嵌套方法"}},[e._v("#")]),e._v(" 减少嵌套方法")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_flattenarray",target:"_blank",rel:"noopener noreferrer"}},[e._v("flatten"),r("OutboundLink")],1),e._v("：减少一级"),r("code",[e._v("array")]),e._v("嵌套深度。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_flattendeeparray",target:"_blank",rel:"noopener noreferrer"}},[e._v("flattenDeep"),r("OutboundLink")],1),e._v("：将"),r("code",[e._v("array")]),e._v("递归为一维数组。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_flattendeptharray-depth1",target:"_blank",rel:"noopener noreferrer"}},[e._v("flattenDepth"),r("OutboundLink")],1),e._v("：根据 "),r("code",[e._v("depth")]),e._v(" 递归减少 "),r("code",[e._v("array")]),e._v(" 的嵌套层级")])]),e._v(" "),r("h3",{attrs:{id:"数组转换方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组转换方法"}},[e._v("#")]),e._v(" 数组转换方法")]),e._v(" "),r("blockquote",[r("p",[e._v("将数组以对象或者字符串的数据结构展现出来")])]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_joinarray-separator-",target:"_blank",rel:"noopener noreferrer"}},[e._v("join"),r("OutboundLink")],1),e._v("：将 "),r("code",[e._v("array")]),e._v(" 中的所有元素转换为由 "),r("code",[e._v("separator")]),e._v(" 分隔的字符串。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_frompairspairs",target:"_blank",rel:"noopener noreferrer"}},[e._v("fromPairs"),r("OutboundLink")],1),e._v("：根据数组中的值返回一个由键值对"),r("code",[e._v("pairs")]),e._v("构成的对象")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_zipobjectprops-values",target:"_blank",rel:"noopener noreferrer"}},[e._v("zipObject"),r("OutboundLink")],1),e._v("：这个方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#fromPairs",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.fromPairs"),r("OutboundLink")],1),e._v("，除了它接受 2 个数组，第一个数组中的值作为属性标识符（属性名），第二个数组中的值作为相应的属性值。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_zipobjectdeepprops-values",target:"_blank",rel:"noopener noreferrer"}},[e._v("zipObjectDeep"),r("OutboundLink")],1),e._v("：这个方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#zipObject",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.zipObject"),r("OutboundLink")],1),e._v("，除了它支持属性路径。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_countbycollection-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("countBy")]),r("OutboundLink")],1),e._v("：创建一个组成对象，"),r("code",[e._v("key")]),e._v("是经过迭代器后返回的值，"),r("code",[e._v("value")]),e._v("这个值返回的次数")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_groupbycollection-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("groupBy")]),r("OutboundLink")],1),e._v("：类似"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_countbycollection-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("countBy")]),r("OutboundLink")],1),e._v("，不同是"),r("code",[e._v("value")]),e._v("用来体现匹配中的集合。")])])]),e._v(" "),r("h3",{attrs:{id:"排序方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#排序方法"}},[e._v("#")]),e._v(" 排序方法")]),e._v(" "),r("h4",{attrs:{id:"不纯的函数-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不纯的函数-3"}},[e._v("#")]),e._v(" 不纯的函数")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_reversearray",target:"_blank",rel:"noopener noreferrer"}},[e._v("reverse"),r("OutboundLink")],1),e._v("：反转数组")])]),e._v(" "),r("h3",{attrs:{id:"数组分组"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组分组"}},[e._v("#")]),e._v(" 数组分组")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_unziparray",target:"_blank",rel:"noopener noreferrer"}},[e._v("unzip"),r("OutboundLink")],1),e._v("：它接收分组元素的数组，并且创建一个数组")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_unzipwitharray-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("unzipWith"),r("OutboundLink")],1),e._v("：此方法类似于 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#unzip",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.unzip"),r("OutboundLink")],1),e._v("，除了它接受一个"),r("code",[e._v("iteratee")]),e._v("指定重组值应该如何被组合")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_ziparrays",target:"_blank",rel:"noopener noreferrer"}},[e._v("zip"),r("OutboundLink")],1),e._v("：创建一个分组元素的数组，数组的第一个元素包含所有给定数组的第一个元素，数组的第二个元素包含所有给定数组的第二个元素，以此类推。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_zipwitharrays-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[e._v("zipWith"),r("OutboundLink")],1),e._v("：这个方法类似于 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#zip",target:"_blank",rel:"noopener noreferrer"}},[e._v("_.zip"),r("OutboundLink")],1),e._v("，不同之处在于它接受一个 "),r("code",[e._v("iteratee")]),e._v("（迭代函数），来 指定分组的值应该如何被组合。 该 iteratee 调用每个组的元素： "),r("em",[e._v("(...group)")]),e._v(".")])]),e._v(" "),r("h3",{attrs:{id:"数组判断方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数组判断方法"}},[e._v("#")]),e._v(" 数组判断方法")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_everycollection-predicate_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("every")]),r("OutboundLink")],1),e._v("：判断数组中的所有值是否都满足某个条件，否则返回"),r("code",[e._v("false")]),e._v("，是则返回"),r("code",[e._v("true")])])]),e._v(" "),r("h3",{attrs:{id:"遍历方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#遍历方法"}},[e._v("#")]),e._v(" 遍历方法")]),e._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_foreachcollection-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("forEach")]),r("OutboundLink")],1),e._v("：类似原生的"),r("code",[e._v("forEach")]),e._v("，区别是可以遍历对象")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_foreachrightcollection-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("forEachRight")]),r("OutboundLink")],1),e._v("：这个方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#forEach",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("_.forEach")]),r("OutboundLink")],1),e._v("，不同之处在于， "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#forEachRight",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("_.forEachRight")]),r("OutboundLink")],1),e._v(" 是从右到左遍历集合中每一个元素的。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_flatmapcollection-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("flatMap")]),r("OutboundLink")],1),e._v("：遍历数组，将创建的值，进行扁平化合并")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_flatmapdeepcollection-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("flatMapDeep")]),r("OutboundLink")],1),e._v("：这个方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#flatMap",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("_.flatMap")]),r("OutboundLink")],1),e._v(" 不同之处在于， "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#flatMapDeep",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("_.flatMapDeep")]),r("OutboundLink")],1),e._v(" 会继续扁平化递归映射的结果。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_flatmapdepthcollection-iteratee_identity-depth1",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("flatMapDepth")]),r("OutboundLink")],1),e._v("：该方法类似 "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#flatMap",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("_.flatMap")]),r("OutboundLink")],1),e._v("，不同之处在于， "),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#flatMapDepth",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("_.flatMapDepth")]),r("OutboundLink")],1),e._v(" 会根据指定的 "),r("code",[e._v("depth")]),e._v("（递归深度）继续扁平化递归映射结果。")])]),e._v(" "),r("li",[r("p",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_mapcollection-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("map")]),r("OutboundLink")],1),e._v("：类似原生"),r("code",[e._v("map")]),e._v("，不同可遍历对象，根据对象的"),r("code",[e._v("value")]),e._v("，生成新的数组")])])]),e._v(" "),r("h3",{attrs:{id:"分类方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分类方法"}},[e._v("#")]),e._v(" 分类方法")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_partitioncollection-predicate_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("partition")]),r("OutboundLink")],1),e._v("：可根据规则对数组中的值进行分类，只能分 2 类")])]),e._v(" "),r("h2",{attrs:{id:"函数工具方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#函数工具方法"}},[e._v("#")]),e._v(" 函数工具方法")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_aftern-func",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("after")]),r("OutboundLink")],1),e._v("：当某个函数被触发指定次数后发出，某个回调")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_aryfunc-nfunclength",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("ary")]),r("OutboundLink")],1),e._v("：创建一个调用"),r("code",[e._v("func")]),e._v("的函数。调用"),r("code",[e._v("func")]),e._v("时最多接受 "),r("code",[e._v("n")]),e._v("个参数，忽略多出的参数。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_beforen-func",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("before")]),r("OutboundLink")],1),e._v("：限制某个函数的调用次数")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_curryfunc-arityfunclength",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("curry")]),r("OutboundLink")],1),e._v("：使某个可以接受多个参数的函数柯理化")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_curryrightfunc-arityfunclength",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("curryRight")]),r("OutboundLink")],1),e._v("：与"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_curryfunc-arityfunclength",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("curry")]),r("OutboundLink")],1),e._v("类似，从参数的右侧开始柯理化")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_debouncefunc-wait0-options",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("debounce")]),r("OutboundLink")],1),e._v("：防抖，函数在延迟设定时间后执行，如果，在此期间又触发了函数，则继续顺延")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_deferfunc-args",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("defer")]),r("OutboundLink")],1),e._v("、"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_delayfunc-wait-args",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("delay")]),r("OutboundLink")],1),e._v("：类似"),r("code",[e._v("setTimeout")])]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_negatepredicate",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("negate")]),r("OutboundLink")],1),e._v("：使一个函数结果的返回值取反")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_oncefunc",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("once")]),r("OutboundLink")],1),e._v("：使一个函数只能执行一次，重复调用不执行函数，直接返回第一次的结果")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_overargsfunc-transforms_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("overArgs")]),r("OutboundLink")],1),e._v("：创建一个函数，调用"),r("code",[e._v("func")]),e._v("时参数为相对应的"),r("code",[e._v("transforms")]),e._v("的返回值。如果没有对应的转换函数则不进行转换")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_spreadfunc-start0",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("spread")]),r("OutboundLink")],1),e._v("："),r("code",[e._v("func")]),e._v("传入的数组可以解析成单个的值")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_throttlefunc-wait0-options",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("throttle")]),r("OutboundLink")],1),e._v("：节流，在设定时间内，只能执行一次函数。")])]),e._v(" "),r("h2",{attrs:{id:"数据工具方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#数据工具方法"}},[e._v("#")]),e._v(" 数据工具方法")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_clonevalue",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("clone")]),r("OutboundLink")],1),e._v("：创建一个 "),r("code",[e._v("value")]),e._v(" 的浅拷贝")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_clonedeepvalue",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cloneDeep")]),r("OutboundLink")],1),e._v("：创建一个 "),r("code",[e._v("value")]),e._v(" 的深拷贝")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_clonedeepwithvalue-customizer",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cloneDeepWith")]),r("OutboundLink")],1),e._v("：类似"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_clonedeepvalue",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cloneDeep")]),r("OutboundLink")],1),e._v("，区别，在拷贝时，可以"),r("code",[e._v("return")]),e._v("指定值作为返回值")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_clonewithvalue-customizer",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("cloneWith")]),r("OutboundLink")],1),e._v("：类似"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_clonevalue",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("clone")]),r("OutboundLink")],1),e._v("，区别，在拷贝时，可以"),r("code",[e._v("return")]),e._v("指定值作为返回值")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_conformstoobject-source",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("conformsTo")]),r("OutboundLink")],1),e._v("：判断对象中某个 key 的 value 是否满足判断条件")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_isequalvalue-other",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("isEqual")]),r("OutboundLink")],1),e._v("：执行递归比较")])]),e._v(" "),r("h2",{attrs:{id:"对象方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#对象方法"}},[e._v("#")]),e._v(" 对象方法")]),e._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_forinobject-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("forIn")]),r("OutboundLink")],1),e._v("：遍历对象，会遍历原型链上可枚举的值")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_forownobject-iteratee_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("forOwn")]),r("OutboundLink")],1),e._v("：遍历对象，不会遍历原型链上可枚举的值")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_pickobject-props",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("pick")]),r("OutboundLink")],1),e._v("：创建一个从 "),r("code",[e._v("object")]),e._v(" 中选中的属性的对象。")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_pickbyobject-predicate_identity",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("pickBy")]),r("OutboundLink")],1),e._v("：类似"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_pickobject-props",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("pick")]),r("OutboundLink")],1),e._v("，可在创建时，自定义规则进行选择")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_mergeobject-sources",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("merge")]),r("OutboundLink")],1),e._v("：合并两个对象，类似"),r("code",[e._v("webpack-merge")]),e._v("效果")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_getobject-path-defaultvalue",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("get")]),r("OutboundLink")],1),e._v("：对象取值方法，可设置默认值")]),e._v(" "),r("li",[r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_resultobject-path-defaultvalue",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("result")]),r("OutboundLink")],1),e._v("：与"),r("a",{attrs:{href:"https://www.lodashjs.com/docs/latest#_getobject-path-defaultvalue",target:"_blank",rel:"noopener noreferrer"}},[r("code",[e._v("get")]),r("OutboundLink")],1),e._v("类似，如果是函数，则返回函数执行后的结果")]),e._v(" "),r("li"),e._v(" "),r("li")])])}),[],!1,null,null,null);t.default=o.exports}}]);