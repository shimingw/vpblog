(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{271:function(e,t,a){"use strict";a.r(t);var s=a(2),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"select语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select语句"}},[e._v("#")]),e._v(" select语句")]),e._v(" "),a("h2",{attrs:{id:"筛选字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#筛选字段"}},[e._v("#")]),e._v(" 筛选字段")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT column_name,column_name\n\nFROM table_name;\n")])])]),a("h3",{attrs:{id:"选择所有"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择所有"}},[e._v("#")]),e._v(" 选择所有")]),e._v(" "),a("p",[e._v("SELECT * FROM Websites;")]),e._v(" "),a("p",[e._v("选择不重复的")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select distinct sex from test;\n")])])]),a("p",[e._v("筛选条件")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Select * from emp where sal > 2000 and sal < 3000;\n\nSelect * from emp where sal > 2000 or comm > 500;\n\nselect * from test where not name > 110;\n\nSelect * from emp where comm is null;\n\nSelect * from emp where sal in (5000,3000,1500);\n\n")])])]),a("p",[e._v("查询 EMP 表 SAL 列中等于 5000，3000，1500 的值。")]),e._v(" "),a("p",[e._v("Like模糊查询")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("Select * from emp where ename like 'M%';\n")])])]),a("p",[e._v("order by排序")]),e._v(" "),a("p",[e._v("按照两个字段进行排列是什么意思？")]),e._v(" "),a("p",[e._v("select * from test order by name;升序排列")]),e._v(" "),a("p",[e._v("select * from test order by name desc;降序排列")]),e._v(" "),a("p",[e._v("SQL INSERT INTO 语法")]),e._v(" "),a("p",[e._v("INSERT INTO table_name (column1,column2,column3,...)")]),e._v(" "),a("p",[e._v("VALUES (value1,value2,value3,...);")]),e._v(" "),a("h2",{attrs:{id:"update"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#update"}},[e._v("#")]),e._v(" update")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("update test set sex='hahahahah' where name='smw';\n")])])]),a("p",[e._v("在更新记录时要格外小心！在上面的实例中，如果我们省略了 WHERE 子句，如下所示：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("UPDATE Websites\nSET alexa='5000', country='USA'\n")])])]),a("p",[e._v("执行以上代码会将 Websites 表中所有数据的 alexa 改为 5000，country 改为 USA。")]),e._v(" "),a("p",[e._v("执行没有 WHERE 子句的 UPDATE 要慎重，再慎重。")]),e._v(" "),a("h2",{attrs:{id:"delete"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[e._v("#")]),e._v(" DELETE")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("DELETE FROM table_name\nWHERE some_column=some_value;\n")])])]),a("table",[a("thead",[a("tr",[a("th"),e._v(" "),a("th",{staticStyle:{"text-align":"left"}},[e._v("**请注意 SQL DELETE 语句中的 WHERE 子句！**WHERE 子句规定哪条记录或者哪些记录需要删除。如果您省略了 WHERE 子句，所有的记录都将被删除！")])])]),e._v(" "),a("tbody",[a("tr",[a("td"),e._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])]),e._v(" "),a("h2",{attrs:{id:"select-top-limit-rownum"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#select-top-limit-rownum"}},[e._v("#")]),e._v(" SELECT TOP, LIMIT, ROWNUM")]),e._v(" "),a("p",[e._v("选择前十条")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select  * from test limit 10;\n")])])]),a("h2",{attrs:{id:"like"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#like"}},[e._v("#")]),e._v(" like")]),e._v(" "),a("p",[e._v("模糊查询")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT * FROM test\tWHERE name LIKE '%oo%';\n")])])]),a("h2",{attrs:{id:"in-操作符实例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#in-操作符实例"}},[e._v("#")]),e._v(" IN 操作符实例")]),e._v(" "),a("p",[e._v('下面的 SQL 语句选取 name 为 "Google" 或 "菜鸟教程" 的所有网站：')]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT * FROM Websites\tWHERE name IN ('Google','菜鸟教程');\n")])])]),a("h2",{attrs:{id:"between-与not-between"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#between-与not-between"}},[e._v("#")]),e._v(" BETWEEN 与NOT BETWEEN")]),e._v(" "),a("p",[e._v("在这个范围内、与不在这个范围内的查询")]),e._v(" "),a("p",[e._v("也可以使用文本值，会使用code值去查")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT * FROM Websites\tWHERE alexa BETWEEN 1 AND 20;\nSELECT * FROM Websites\tWHERE alexa NOT BETWEEN 1 AND 20;\n")])])]),a("h2",{attrs:{id:"sql-别名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-别名"}},[e._v("#")]),e._v(" SQL 别名")]),e._v(" "),a("p",[e._v("Concat可以使两个字段一起查出来")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select name , CONCAT(sex,type) as info from test;\n")])])]),a("p",[e._v("多表查询语句。使用第一张表的字段匹配第二张表的字段。来进行查询")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select i.hobby from test as t , test_info as i where t.name=i.name;\n")])])]),a("h1",{attrs:{id:"sql-连接-join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-连接-join"}},[e._v("#")]),e._v(" SQL 连接(JOIN)")]),e._v(" "),a("p",[e._v("SQL JOIN 子句用于把来自两个或多个表的行结合起来，基于这些表之间的共同字段。")]),e._v(" "),a("p",[e._v("最常见的 JOIN 类型："),a("strong",[e._v("SQL INNER JOIN（简单的 JOIN）")]),e._v("。 SQL INNER JOIN 从多个表中返回满足 JOIN 条件的所有行。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select t.type , i.name ,i.hobby from test as t inner join test_info as i  on t.name = i.name;\n")])])]),a("p",[e._v("不同的jion")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("INNER JOIN")]),e._v("：如果表中有至少一个匹配，则返回行")]),e._v(" "),a("li",[a("strong",[e._v("LEFT JOIN")]),e._v("：即使右表中没有匹配，也从左表返回所有的行")]),e._v(" "),a("li",[a("strong",[e._v("RIGHT JOIN")]),e._v("：即使左表中没有匹配，也从右表返回所有的行")]),e._v(" "),a("li",[a("strong",[e._v("FULL JOIN")]),e._v("：只要其中一个表中存在匹配，则返回行")])]),e._v(" "),a("h2",{attrs:{id:"sql-union-操作符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-union-操作符"}},[e._v("#")]),e._v(" SQL UNION 操作符")]),e._v(" "),a("p",[e._v("union 选取不同的")]),e._v(" "),a("p",[e._v("union 允许选取重复的值")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select name  from test \nunion\nselect name  from test_info \n\nselect name , sex from test where name = 'smw'\nunion all\nselect name , hobby from test_info where name = 'smw';\n")])])]),a("h2",{attrs:{id:"sql-select-into-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-select-into-语句"}},[e._v("#")]),e._v(" SQL SELECT INTO 语句")]),e._v(" "),a("p",[e._v("INSERT INTO SELECT 语句从一个表复制数据，然后把数据插入到一个已存在的表中。")]),e._v(" "),a("p",[e._v("但是字段个数必须相同")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("insert into test_info select * from test;\n")])])]),a("h2",{attrs:{id:"sql-create-table-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-create-table-语句"}},[e._v("#")]),e._v(" SQL CREATE TABLE 语句")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE test3\n(\nPersonID int primary key,\nLastName varchar(255),\nFirstName varchar(255),\nAddress varchar(255),\nCity varchar(255)\n);\n")])])]),a("h2",{attrs:{id:"sql-foreign-key-约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-foreign-key-约束"}},[e._v("#")]),e._v(" SQL FOREIGN KEY 约束")]),e._v(" "),a("p",[e._v("测试失败")]),e._v(" "),a("p",[e._v("约束类的创建略过")]),e._v(" "),a("h2",{attrs:{id:"sql-create-index-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-create-index-语句"}},[e._v("#")]),e._v(" SQL CREATE INDEX 语句")]),e._v(" "),a("p",[e._v("没理解")]),e._v(" "),a("h2",{attrs:{id:"sql-alter-table-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-alter-table-语句"}},[e._v("#")]),e._v(" SQL ALTER TABLE 语句")]),e._v(" "),a("p",[e._v("用于在已有的表中添加、删除或修改列。还可以改变列的数据类型")]),e._v(" "),a("p",[e._v("添加列")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE table_name\tADD column_name datatype\n")])])]),a("p",[e._v("删除列")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("ALTER TABLE table_name\tDROP COLUMN column_name\n")])])]),a("h2",{attrs:{id:"sql-auto-increment-字段"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-auto-increment-字段"}},[e._v("#")]),e._v(" SQL AUTO INCREMENT 字段")]),e._v(" "),a("p",[e._v("Auto-increment 会在新记录插入表中时生成一个唯一的数字。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE Persons\n(\nID int NOT NULL AUTO_INCREMENT,\nLastName varchar(255) NOT NULL,\nFirstName varchar(255),\nAddress varchar(255),\nCity varchar(255),\nPRIMARY KEY (ID)\n)\n")])])]),a("h2",{attrs:{id:"sql-null-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-null-函数"}},[e._v("#")]),e._v(" SQL NULL 函数")]),e._v(" "),a("p",[e._v("查出来如果是null，可以自定义成自己希望的那个值")]),e._v(" "),a("h3",{attrs:{id:"sql-创建表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-创建表"}},[e._v("#")]),e._v(" SQL 创建表")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE IF NOT EXISTS `use` (\n\t`id` INT  UNSIGNED  AUTO_INCREMENT,\n    `name` VARCHAR (100) NOT NULL,\n    `part` INT  UNSIGNED  NOT NULL,\n    `type` VARCHAR (100) NOT NULL,\n    `create_date` DATA\n    PRIMARY KEY (`id`)\n)ENGINE=InnoDB DEFAULT CHARSET=utf8\n")])])]),a("p",[e._v("INSERT INTO "),a("code",[e._v("use")]),e._v(" ('name','part','type','create_date')\nVALUES\n('qh',2,'php',now());")]),e._v(" "),a("p",[e._v("Order by 查询两列")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT * FROM Websites\nORDER BY country,alexa;\n")])])]),a("h3",{attrs:{id:"join"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#join"}},[e._v("#")]),e._v(" join")]),e._v(" "),a("p",[e._v("两张表join的时候，inner，left ， right ，full ，即以哪张表为基准来")]),e._v(" "),a("p",[e._v("显示查询出来的数据")]),e._v(" "),a("p",[e._v("SELECT * FROM "),a("code",[e._v("use")]),e._v(" as u inner JOIN pname as p ON u.part = p.type;")]),e._v(" "),a("p",[e._v("使用表的别名来查询 一样")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(".col-md-offset-4{margin-left:33.33333333%;margin-top: 33.333333%}\n")])])]),a("p",[e._v("SELECT * FROM "),a("code",[e._v("use")]),e._v(" LEFT JOIN pname ON "),a("code",[e._v("use")]),e._v(".part = pname.type UNION SELECT * FROM "),a("code",[e._v("use")]),e._v(" RIGHT JOIN pname on "),a("code",[e._v("use")]),e._v(".part =")]),e._v(" "),a("p",[e._v("​                       -> pname.type")]),e._v(" "),a("p",[e._v("shanghu.shuzutech.com:商户登录页面\nqiye.shuzutech.com：渠道登录页面\nyunying.shuzutech.com：数族角色登录页面")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("pip uninstall powerline-status\n/usr/local/lib/python2.7/site-packages\n")])])]),a("h2",{attrs:{id:"sql-select-into"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-select-into"}},[e._v("#")]),e._v(" SQL SELECT INTO")]),e._v(" "),a("p",[e._v("ALTER TABLE Orders\nADD FOREIGN KEY (P_Id)\nREFERENCES Persons(P_Id)")]),e._v(" "),a("p",[e._v("ALTER TABLE Orders\nADD CONSTRAINT fk_PerOrders\nFOREIGN KEY (P_Id)\nREFERENCES Persons(P_Id)")]),e._v(" "),a("h3",{attrs:{id:"foreign-key-约束"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#foreign-key-约束"}},[e._v("#")]),e._v(" FOREIGN KEY 约束")]),e._v(" "),a("p",[e._v("create table my_student(\n"),a("code",[e._v("id")]),e._v(" int unsigned not null auto_increment primary key,\n"),a("code",[e._v("name")]),e._v(" varchar(25) not null comment 'student name',\n"),a("code",[e._v("pid")]),e._v(" int unsigned not null comment 'student profile id',\n"),a("code",[e._v("cid")]),e._v(" int unsigned not null comment 'student class id',\nkey "),a("code",[e._v("cid")]),e._v("("),a("code",[e._v("cid")]),e._v(")，\nkey "),a("code",[e._v("pid")]),e._v("("),a("code",[e._v("pid")]),e._v(")\n)engine=InnoDB default charset=utf8 auto_increment=1;")]),e._v(" "),a("p",[a("strong",[e._v("CREATE")]),e._v(" "),a("strong",[e._v("TABLE")]),e._v(" "),a("code",[e._v("Persons")]),e._v("(")]),e._v(" "),a("p",[a("code",[e._v("P_Id")]),e._v(" int "),a("strong",[e._v("NOT")]),e._v("  null,")]),e._v(" "),a("p",[e._v("name VARCHAR(11) "),a("strong",[e._v("not")]),e._v(" NULL , address VARCHAR(11) "),a("strong",[e._v("not")]),e._v(" NULL,"),a("strong",[e._v("PRIMARY")]),e._v(" "),a("strong",[e._v("KEY")]),e._v(" (P_Id));")]),e._v(" "),a("p",[e._v("(1452, u'Cannot add or update a child row: a foreign key constraint fails ("),a("code",[e._v("smw")]),e._v("."),a("code",[e._v("orders")]),e._v(", CONSTRAINT "),a("code",[e._v("orders_ibfk_1")]),e._v(" FOREIGN KEY ("),a("code",[e._v("P_Id")]),e._v(") REFERENCES "),a("code",[e._v("Persons")]),e._v(" ("),a("code",[e._v("P_Id")]),e._v("))')")])])}),[],!1,null,null,null);t.default=n.exports}}]);